<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="System_test_net_4_5.dll" total="6262" failures="2" not-run="125" date="2015-04-23" time="18:33:49">
  <environment nunit-version="2.4.8.0" clr-version="4.0.30319.17020" os-version="Unix 3.13.0.49" platform="Unix" cwd="/home/alexander/dev/mono/mcs/class/System" machine-name="ubuntu-desktop" user="alexander" user-domain="ubuntu-desktop" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="System_test_net_4_5.dll" success="False" time="98.919" asserts="0">
    <results>
      <test-suite name="MonoTests" success="False" time="98.293" asserts="0">
        <results>
          <test-suite name="Microsoft" success="True" time="5.284" asserts="0">
            <results>
              <test-suite name="CSharp" success="True" time="4.897" asserts="0">
                <results>
                  <test-suite name="CodeGeneratorFromCompileUnitTest" success="True" time="0.028" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.AttributeAndGlobalNamespaceWithImportTest" executed="True" success="True" time="0.009" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.AttributeAndSimpleNamespaceTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.AttributeWithValueTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.CodeSnippetTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.DefaultCodeUnitTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.GlobalAttributeBeforeType" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.MultipleAttributeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.NullCodeUnitTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.ReferenceAndSimpleNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.ReferencedTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.SimpleAttributeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromCompileUnitTest.SimpleNamespaceTest" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromExpressionTest" success="True" time="0.023" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.ArrayCreateExpressionTest" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.DefaultExpressionTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.DefaultValueExpressionTest" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.DelegateInvokeTest" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.EscapedIdentifierTest" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.EventReferenceTest" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.NullExpressionTest" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.ParameterDeclarationExpressionTest" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest" executed="True" success="True" time="0.004" asserts="11" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_Char" executed="True" success="True" time="0.003" asserts="43" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_SByte" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_UInt16" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_UInt32" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_UInt64" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromExpressionTest.TypeReferenceExpressionTest" executed="True" success="True" time="0.001" asserts="18" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromNamespaceTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.CommentOnlyNamespaceTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.DefaultNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.ImportsTest" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.InvalidNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.Method_TypeParameters" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.Method_TypeParameters_Constraints" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.Method_TypeParameters_ConstructorConstraint" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.NullNamespaceNameTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.NullNamespaceTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.SimpleNamespaceTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.Type_TypeParameters" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.Type_TypeParameters_Constraints" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.Type_TypeParameters_ConstructorConstraint" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromNamespaceTest.TypeTest" executed="True" success="True" time="0.001" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromStatementTest" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeAssignStatementTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeAttachEventStatementTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeCommentStatementTest" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeConditionStatementTest" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeExpressionStatementTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeGotoStatementTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeIterationStatementTest" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeLabeledStatementTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeMethodReturnStatementTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeRemoveEventStatementTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeSnippetStatementTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeStatement" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeThrowExceptionStatementTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeTryCatchFinallyStatementTest" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.CodeVariableDeclarationStatementTest" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.DefaultStatementTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromStatementTest.NullStatementTest" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Class" success="True" time="0.040" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.AbstractPropertyTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.AttributesAndTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.BaseConstructorMultipleArgs" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.ConstructorAttributesTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.ConstructorAttributesTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.ConstructorParameterAttributesTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.DefaultTypeTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.EntryPointMethodTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.EscapePropertyName" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.EventImplementationTypeOrder" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.FieldMembersAttributesTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.GenericCodeTypeReferencesTest" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodMembersTypeTest1_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodMembersTypeTest3" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyImplementationTypeOrder" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeGetSet_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeTest1_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.SimpleTypeTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.StaticPropertyTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.TypeConstructorTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Class.TypeConstructorTest_C" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Delegate" success="True" time="0.028" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.AttributesAndTypeTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.BaseConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Delegate.TypeConstructorTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Enum" success="True" time="0.038" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.AttributesAndTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.BaseConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.ConstructorAttributesTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.DefaultTypeTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeGetSet_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.SimpleTypeTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.TypeConstructorTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Enum.TypeConstructorTest_C" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Interface" success="True" time="0.038" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.AttributesAndTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.BaseConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.ConstructorAttributesTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.DefaultTypeTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.DefaultTypeTest_C" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodMembersTypeTest1_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeGetSet_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.SimpleTypeTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.TypeConstructorTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Interface.TypeConstructorTest_C" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Struct" success="True" time="0.035" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.AttributesAndTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.BaseConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.ConstructorAttributesTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.DefaultTypeTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodMembersTypeTest1_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeGetSet_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.SimpleTypeTest_C" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.TypeConstructorTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorFromTypeTest_Struct.TypeConstructorTest_C" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorIdentifierTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorIdentifierTest.TestCreateEscapedIdentifier" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorIdentifierTest.TestCreateEscapedIdentifierNullArg" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorIdentifierTest.TestCreateValidIdentifier" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorIdentifierTest.TestCreateValidIdentifierNullArg" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorIdentifierTest.TestIsValidIdentifier" executed="True" success="True" time="0.001" asserts="16" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorTypeOutputTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorTypeOutputTest.GetTypeOutput" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.CSharp.CodeGeneratorTypeOutputTest.Shortcuts" executed="True" success="True" time="0.001" asserts="32" />
                    </results>
                  </test-suite>
                  <test-suite name="CSharpCodeProviderTest" success="True" time="4.591" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromDom_InMemory" executed="True" success="True" time="0.357" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromDom_NotInMemory" executed="True" success="True" time="0.586" asserts="3" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromDomBatch_InMemory" executed="True" success="True" time="0.322" asserts="4" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromDomBatch_NotInMemory" executed="True" success="True" time="0.548" asserts="3" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromFile_InMemory" executed="True" success="True" time="0.376" asserts="15" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromFileBatch_Executable_InMemory" executed="True" success="True" time="0.417" asserts="27" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromFileBatch_Library_InMemory" executed="True" success="True" time="0.412" asserts="27" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromSource_InMemory" executed="True" success="True" time="0.413" asserts="5" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromSource_InMemory_Twice" executed="True" success="True" time="0.602" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromSource_InMemory_With_Extra_Delete" executed="True" success="True" time="0.141" asserts="0" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromSourceBatch_InMemory" executed="True" success="True" time="0.407" asserts="10" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.FileExtension" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.GeneratorSupports" executed="True" success="True" time="0.001" asserts="27" />
                      <test-case name="MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.LanguageOptionsTest" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="VisualBasic" success="True" time="0.286" asserts="0">
                <results>
                  <test-suite name="CodeGeneratorFromBinaryOperatorTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromBinaryOperatorTest.TypeReferenceExpressionTest" executed="True" success="True" time="0.003" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromCompileUnitTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.AttributeAndSimpleNamespaceTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.AttributeWithValueTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.CodeSnippetTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.DefaultCodeUnitTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.ExternalSourceTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.MultipleAttributeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.NullCodeUnitTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.ReferenceAndSimpleNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.ReferencedTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.SimpleAttributeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromCompileUnitTest.SimpleNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromExpressionTest" success="True" time="0.020" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.ArrayCreateExpressionTest" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.ArrayIndexerExpressionTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.DefaultExpressionTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.DelegateInvokeTest" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.EscapedIdentifierTest" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.EventReferenceTest" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.NullExpressionTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.ParameterDeclarationExpressionTest" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_Char" executed="True" success="True" time="0.004" asserts="43" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_SByte" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_UInt16" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_UInt32" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.PrimitiveExpressionTest_UInt64" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromExpressionTest.TypeReferenceExpressionTest" executed="True" success="True" time="0.001" asserts="18" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromNamespaceTest" success="True" time="0.019" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.CommentOnlyNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.DefaultNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.ImportsTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.InvalidNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.Method_TypeParameters" executed="True" success="True" time="0.003" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.Method_TypeParameters_Constraints" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.Method_TypeParameters_ConstructorConstraint" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.NullNamespaceNameTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.NullNamespaceTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.SimpleNamespaceTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.Type_TypeParameters" executed="True" success="True" time="0.003" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.Type_TypeParameters_Constraints" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.Type_TypeParameters_ConstructorConstraint" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromNamespaceTest.TypeTest" executed="True" success="True" time="0.001" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromStatementTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeAssignStatementTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeAttachEventStatementKeywordTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeAttachEventStatementTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeCommentStatementTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeConditionStatementTest" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeExpressionStatementTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeGotoStatementTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeIterationStatementTest" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeLabeledStatementTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeMethodReturnStatementTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeRemoveEventStatementTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeSnippetStatementTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeStatement" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeThrowExceptionStatementTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeTryCatchFinallyStatementTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.CodeVariableDeclarationStatementTest" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.DefaultStatementTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromStatementTest.NullStatementTest" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Class" success="True" time="0.044" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.AbstractPropertyTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.AttributesAndTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.BaseConstructorMultipleArgs" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.EventImplementationTypeOrder" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.EventMembersTypeTest1" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyParametersTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.StaticPropertyTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Class.TypeConstructorTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Delegate" success="True" time="0.038" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.AttributesAndTypeTest" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.BaseConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.BaseConstructorSingleArg" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.ConstructorParameterAttributesTest" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.DelegateWithParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.SimpleTypeTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Delegate.TypeConstructorTest" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Enum" success="True" time="0.036" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.AttributesAndTypeTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.BaseConstructorMultipleArgs" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyOverloadsTest2" executed="True" success="True" time="0.005" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Enum.TypeConstructorTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Interface" success="True" time="0.033" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.AttributesAndTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.BaseConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Interface.TypeConstructorTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGeneratorFromTypeTest_Struct" success="True" time="0.033" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.AttributesAndTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.BaseConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.BaseConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.ChainedConstructorMultipleArgs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.ChainedConstructorSingleArg" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.ConstructorAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.ConstructorParameterAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.ConstructorParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.DefaultTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.DerivedTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.EntryPointMethodTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.EventImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.EventImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.EventMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.EventMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.EventPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.FieldMembersAttributesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.FieldMembersTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.FieldNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodMembersTypeTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodParamArrayAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.MethodReturnTypeAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.NullTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PartialTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyImplementationTypeOrder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyImplementationTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyIndexerGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyIndexerSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyIndexerTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyIndexerTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeFamilyOrAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeGetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeGetSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeSetOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyMembersTypeTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyNewSlotTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyOverloadsTest1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyOverloadsTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyOverloadsTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyParametersTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.PropertyPrivateImplementationType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.SimpleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.VisualBasic.CodeGeneratorFromTypeTest_Struct.TypeConstructorTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Win32" success="True" time="0.027" asserts="0">
                <results>
                  <test-suite name="IntranetZoneCredentialPolicyTest" success="True" time="0.026" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.Localhost" executed="True" success="True" time="0.004" asserts="2" />
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.LocalhostWithoutCredentials" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.LocalhostWithoutModule" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.LocalhostWithoutWebRequest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.NullCredential" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.NullModule" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.NullRequest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.Microsoft.Win32.IntranetZoneCredentialPolicyTest.NullUri" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite name="System" success="False" time="92.946" asserts="0">
            <results>
              <test-suite name="CodeDom" success="True" time="0.377" asserts="0">
                <results>
                  <test-suite name="CodeArgumentReferenceExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeArgumentReferenceExpressionTest.DefaultConstructor" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeArgumentReferenceExpressionTest.NullParameter" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeArrayCreateExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeArrayCreateExpressionTest.DefaultConstructor" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeArrayCreateExpressionTest.NullCreateType" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeAttachEventStatementTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeAttachEventStatementTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttachEventStatementTest.Constructor1" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttachEventStatementTest.Constructor2" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeAttributeArgumentCollectionTest" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Add" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Constructor2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Remove" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeAttributeArgumentTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentTest.DefaultConstructor" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeArgumentTest.NullName" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeAttributeDeclarationCollectionTest" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Remove" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeAttributeDeclarationTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationTest.Constructor1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationTest.Constructor2" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationTest.Constructor3" executed="True" success="True" time="0.000" asserts="14" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationTest.Constructor4" executed="True" success="True" time="0.000" asserts="14" />
                      <test-case name="MonoTests.System.CodeDom.CodeAttributeDeclarationTest.NullName" executed="True" success="True" time="0.000" asserts="10" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeCastExpressionTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeCastExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.CodeDom.CodeCastExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="14" />
                      <test-case name="MonoTests.System.CodeDom.CodeCastExpressionTest.Constructor2" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeCastExpressionTest.Constructor3" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.CodeDom.CodeCastExpressionTest.Constructor3_NullType" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeCatchClauseCollectionTest" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeCatchClauseTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseTest.Constructor0" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseTest.Constructor1" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseTest.Constructor2" executed="True" success="True" time="0.000" asserts="15" />
                      <test-case name="MonoTests.System.CodeDom.CodeCatchClauseTest.Constructor3" executed="True" success="True" time="0.001" asserts="19" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeChecksumPragmaTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeChecksumPragmaTest.Constructor0" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeChecksumPragmaTest.Constructor1" executed="True" success="True" time="0.001" asserts="13" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeCommentStatementCollectionTest" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Constructor1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeCommentStatementCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeConstructorTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeConstructorTest.Constructor0" executed="True" success="True" time="0.001" asserts="39" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeDefaultValueExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeDefaultValueExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeDefaultValueExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeDelegateCreateExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeDelegateCreateExpressionTest.Constructor0" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.CodeDom.CodeDelegateCreateExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="11" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeDirectiveCollectionTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeDirectiveCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeEventReferenceExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeEventReferenceExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.CodeDom.CodeEventReferenceExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="9" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeExpressionCollectionTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeExpressionCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeGotoStatementTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeGotoStatementTest.Constructor0" executed="True" success="True" time="0.000" asserts="13" />
                      <test-case name="MonoTests.System.CodeDom.CodeGotoStatementTest.Constructor1" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeGotoStatementTest.Constructor1_EmptyLabel" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeGotoStatementTest.Constructor1_NullLabel" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeGotoStatementTest.Label_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeGotoStatementTest.Label_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeLabeledStatementTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeLabeledStatementTest.Constructor0" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.CodeDom.CodeLabeledStatementTest.Constructor1" executed="True" success="True" time="0.000" asserts="13" />
                      <test-case name="MonoTests.System.CodeDom.CodeLabeledStatementTest.Constructor2" executed="True" success="True" time="0.000" asserts="15" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeLinePragmaTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeLinePragmaTest.Constructor0" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeLinePragmaTest.Constructor1" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeMemberFieldTest" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeMemberFieldTest.DefaultType" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeMemberMethodTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeMemberMethodTest.Constructor0" executed="True" success="True" time="0.001" asserts="35" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeMemberPropertyTest" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeMemberPropertyTest.DefaultType" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeMethodInvokeExpressionTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeMethodInvokeExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeMethodInvokeExpressionTest.Constructor1" executed="True" success="True" time="0.001" asserts="19" />
                      <test-case name="MonoTests.System.CodeDom.CodeMethodInvokeExpressionTest.Constructor1_NullParam" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeMethodInvokeExpressionTest.Constructor2" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeMethodInvokeExpressionTest.Constructor2_NullParam" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeMethodReferenceExpressionTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeMethodReferenceExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeMethodReferenceExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.CodeDom.CodeMethodReferenceExpressionTest.Constructor2" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.CodeDom.CodeMethodReferenceExpressionTest.Constructor2_NullArg" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeNamespaceCollectionTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeNamespaceImportCollectionTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportCollectionTest.Add" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportCollectionTest.AddRange" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeNamespaceImportTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportTest.Constructor0" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceImportTest.Constructor1" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeNamespaceTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceTest.Constructor0" executed="True" success="True" time="0.000" asserts="13" />
                      <test-case name="MonoTests.System.CodeDom.CodeNamespaceTest.Constructor1" executed="True" success="True" time="0.000" asserts="16" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeObjectCreateExpressionTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor1_NullParameter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor2" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor2_NullParameter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor3" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor3_NullParameter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeObjectCreateExpressionTest.Constructor3_NullType" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeParameterDeclarationExpressionCollectionTest" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Add" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeParameterDeclarationExpressionTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionTest.Constructor0" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionTest.Constructor2" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionTest.Constructor3" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeParameterDeclarationExpressionTest.Constructor3_NullType" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodePropertyReferenceExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodePropertyReferenceExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.CodeDom.CodePropertyReferenceExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="7" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeRegionDirectiveTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeRegionDirectiveTest.Constructor0" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeRegionDirectiveTest.Constructor1" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeRegionDirectiveTest.InvalidRegionMode" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeRemoveEventStatementTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeRemoveEventStatementTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeRemoveEventStatementTest.Constructor1" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.CodeDom.CodeRemoveEventStatementTest.Constructor2" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeSnippetCompileUnitTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetCompileUnitTest.Constructor0" executed="True" success="True" time="0.000" asserts="20" />
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetCompileUnitTest.Constructor1" executed="True" success="True" time="0.000" asserts="23" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeSnippetExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeSnippetStatementTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetStatementTest.Constructor0" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetStatementTest.Constructor1" executed="True" success="True" time="0.000" asserts="17" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeSnippetTypeMemberTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetTypeMemberTest.Constructor0" executed="True" success="True" time="0.001" asserts="21" />
                      <test-case name="MonoTests.System.CodeDom.CodeSnippetTypeMemberTest.Constructor1" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeStatementCollectionTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.AddRange" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Constructor2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeStatementCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeConstructorTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeConstructorTest.Constructor0" executed="True" success="True" time="0.001" asserts="35" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeDeclarationCollectionTest" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Insert" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDeclarationCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeDelegateTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDelegateTest.BaseTypes" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDelegateTest.DefaultReturnType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDelegateTest.EmptyTypeName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeDelegateTest.NullTypeName" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeMemberCollectionTest" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.AddRange_Null_Item" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Insert" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeMemberCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeOfExpressionTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeOfExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeOfExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeOfExpressionTest.Constructor2" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeOfExpressionTest.Constructor3" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeOfExpressionTest.Constructor3_NullType" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeParameterCollectionTest" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeParameterTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterTest.Constructor0" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeParameterTest.Constructor1" executed="True" success="True" time="0.000" asserts="11" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeReferenceCollectionTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.AddRange_Null_Array" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.AddRange_Null_Collection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.AddRange_Self" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Constructor1_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Constructor1_NullItem" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Constructor2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Constructor2_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Insert_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Remove_NotInCollection" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeReferenceExpressionTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceExpressionTest.Constructor2" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceExpressionTest.Constructor3" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceExpressionTest.Constructor3_NullType" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeTypeReferenceTest" success="True" time="0.017" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseType_ArrayElementType" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseTypeTest1" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseTypeTest2" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseTypeTest3" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseTypeTest4" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseTypeTest5" executed="True" success="True" time="0.000" asserts="18" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseTypeTest6" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.BaseTypeTest7" executed="True" success="True" time="0.000" asserts="18" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.CodeTypeParameter1" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.CodeTypeParameter2" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.CodeTypeParameter3" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.CodeTypeParameter4" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.CodeTypeParameter5" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.Defaults" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.Empty_ArrayElementType" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.EmptyTypeName" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.GenericTypeTest1" executed="True" success="True" time="0.000" asserts="18" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.GenericTypeTest2" executed="True" success="True" time="0.001" asserts="24" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.GenericTypeTest3" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.GenericTypeTest4" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.GenericTypeTest5" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.GenericTypeTest6" description="Bug #523341" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.Null_ArrayElementType" executed="True" success="True" time="0.000" asserts="18" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.NullBaseType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.NullType" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.NullTypeName" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.CodeDom.CodeTypeReferenceTest.ZeroLengthBaseType" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeVariableDeclarationStatementTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor0" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor1" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor2" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor3" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor3_NullType" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor4" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor5" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor6" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableDeclarationStatementTest.Constructor6_NullType" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CodeVariableReferenceExpressionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.CodeDom.CodeVariableReferenceExpressionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.CodeDom.CodeVariableReferenceExpressionTest.Constructor1" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="Compiler" success="True" time="0.066" asserts="0">
                    <results>
                      <test-suite name="CodeGeneratorGenerateFromCompileUnitTest" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.CodeDom.Compiler.CodeGeneratorGenerateFromCompileUnitTest.CodeSnippetBlankLines" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.CodeGeneratorGenerateFromCompileUnitTest.CodeSnippetBlankLinesVerbatimOrder" executed="True" success="True" time="0.005" asserts="4" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.CodeGeneratorGenerateFromCompileUnitTest.When_Having_AssemblyAttribute_And_Using_Namespace_It_Should_Generate_Namespace_First_And_Attribute_Afterwards" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CodeGeneratorOptionsTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.CodeDom.Compiler.CodeGeneratorOptionsTest.Defaults" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.CodeGeneratorOptionsTest.Nullify" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.CodeGeneratorOptionsTest.ReSetDefault" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="ExecutorTest" success="True" time="0.038" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.CodeDom.Compiler.ExecutorTest.ExecWait_NullCmd" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.ExecutorTest.ExecWait_NullTempFileCollection" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.ExecutorTest.ExecWaitWithCapture" executed="True" success="True" time="0.007" asserts="6" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.ExecutorTest.ExecWaitWithCapture_CurrentDir" executed="True" success="True" time="0.005" asserts="6" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.ExecutorTest.ExecWaitWithCapture_Token" executed="True" success="True" time="0.007" asserts="6" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.ExecutorTest.ExecWaitWithCapture_Token_CurrentDir" executed="True" success="True" time="0.006" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="GeneratedCodeAttributeTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.CodeDom.Compiler.GeneratedCodeAttributeTest.Constructor" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.GeneratedCodeAttributeTest.Constructor_Null_Tool" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.GeneratedCodeAttributeTest.Constructor_Null_Version" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="IndentedTextWriterTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.CodeDom.Compiler.IndentedTextWriterTest.DefaultTabStringTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.IndentedTextWriterTest.IndentTest" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="MockCodeGenerator" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.CodeDom.Compiler.MockCodeGenerator.CurrentMemberShouldBeClearedBetweenTypes" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.MockCodeGenerator.IsCurrentTest" executed="True" success="True" time="0.002" asserts="30" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.MockCodeGenerator.IsValidLanguageIndependentIdentifierTest" executed="True" success="True" time="0.000" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="TempFileCollectionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.CodeDom.Compiler.TempFileCollectionTest.Contructor_NullTempDir" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.CodeDom.Compiler.TempFileCollectionTest.TempDir_Stays_Empty" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Collections" success="True" time="2.841" asserts="0">
                <results>
                  <test-suite name="Concurrent" success="True" time="1.402" asserts="0">
                    <results>
                      <test-suite name="BlockingCollectionTests" success="True" time="0.844" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.AddAnyCancellable" executed="True" success="True" time="0.011" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.BoundedAddCompletedTestCase" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.BoundedAddLimit" executed="True" success="True" time="0.102" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.BoundedAddTestCase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.BoundedIsFullTestCase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.ConsumingEnumerableTestCase" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.DefaultAddCompletedTestCase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.DefaultAddTestCase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.EmptyTryTakeWithTimeout" executed="True" success="True" time="0.502" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.IsCompletedEmptyTestCase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.IsCompletedTestCase" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.TakeAnyCancellable" executed="True" success="True" time="0.214" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.TakeAnyFromSecondCollection" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.TakeTestCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.BlockingCollectionTests.TryTakeTestCase" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ConcurrentBagTests" success="True" time="0.554" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.AddFromMultipleThreadTakeFromOneThread" executed="True" success="True" time="0.022" asserts="35" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.AddFromOneThreadPeekFromMultiple" executed="True" success="True" time="0.004" asserts="13" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.AddFromOneThreadTakeFromMultiple" executed="True" success="True" time="0.005" asserts="13" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.AddRemoveAddTest" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.AddStressTest" executed="True" success="True" time="0.431" asserts="3000" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.BasicAddPeekFromOtherThread" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.BasicAddPeekTest" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.BasicAddTakeFromOtherThread" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.BasicAddTakeTest" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.BasicRemoveEmptyTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.BasicRemoveTwiceTest" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.Bug24213" executed="True" success="True" time="0.001" asserts="2050" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentBagTests.RemoveStressTest" executed="True" success="True" time="0.079" asserts="500" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Generic" success="True" time="0.197" asserts="0">
                    <results>
                      <test-suite name="LinkedListTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.AddBeforeAndAfterTest" executed="True" success="True" time="0.003" asserts="16" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.AddedTest" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.ClearTest" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.ContainsTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.CopyToTest" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.CreatedTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.EqualityComparer" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.FindTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.ListSerializationTest" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.NonCircularNodeTest" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.PlayWithNullValues" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.RemoveFirstLastTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.RemoveFromEmptyList" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.RemoveInvalidNodeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.RemoveNullNodeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.LinkedListTest.RemoveTest" executed="True" success="True" time="0.001" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite name="QueueTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.DeserializeTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestClear" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestContains" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestCopyTo" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestCtor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestCtorEnum" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestCtorEnumNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestCtorEx" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestDequeue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestDequeueEx" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestDequeueEx2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestEnqueue" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestEnumerator" executed="True" success="True" time="0.001" asserts="101" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestICollectionCopyTo" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestPeek" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestPeekEx" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestPeekEx2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TestToArray" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TrimExcessDequeueEnqueue" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.QueueTest.TrimExcessTest" executed="True" success="True" time="0.000" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="SortedDictionaryTest" success="True" time="0.052" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.AddDuplicate" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.AddNullKey" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.AddNullKeyNullable" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.AddNullValue" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CopyTo" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CtorComparerDictionaryNullComparer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CtorComparerDictionaryNullDictionary" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CtorDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CtorDictionary" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CtorNullComparer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CtorNullDictionary" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.CustomComparer" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.Enumerator_Current" executed="True" success="True" time="0.004" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.GetEnumerator1" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.GetEnumerator2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.GetItemNonexistent" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.IDictionaryAddKeyNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.IDictionaryAddKeyNullValueType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.IDictionaryAddValueNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.IDictionaryAddValueNullValueType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.KeyEnumerator_Current" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.KeysGetEnumerator1" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.KeysGetEnumerator2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.KeysICollectionAdd" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.KeysICollectionClear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.KeysICollectionCopyTo" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.KeysICollectionRemove" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.Remove" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.Serialize" executed="True" success="True" time="0.004" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.SerializeReverseComparer" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.SetItemExistent" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.SetItemNonexistent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.TryGetValue" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValueEnumerator_Current" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValueEnumeratorNotEmpty_Current" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValuesGetEnumerator1" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValuesGetEnumerator2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValuesICollectionAdd" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValuesICollectionClear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValuesICollectionCopyTo" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedDictionaryTest.ValuesICollectionRemove" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SortedListTest" success="True" time="0.028" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.AddKeyAlreadyExists" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.AddNullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ClearDoesNotTouchCapacity" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ComparatorPartWholeCheck" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ComparatorUsageTest" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ContainsKey" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.CopyTo" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.EmptyKeysCopyToZeroSizedArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.EmptyValuesCopyToZeroSizedArray" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.GetEnumerator" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.IDictionaryNullOnNonExistingKey" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.Item" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ItemMissingKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ItemNullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.KeyEnumeratorVersionChecking" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.Keys" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.KeysIDictionaryGeneric" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.KeysNonGeneric" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.NonComparatorIntCheck" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.NonComparatorStringCheck" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.Remove" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.RemoveNullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.UncomparableList" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ValueEnumeratorVersionChecking" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.Values" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ValuesIDictionaryGeneric" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedListTest.ValuesNonGeneric" executed="True" success="True" time="0.001" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="SortedSetTest" success="True" time="0.051" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.Add" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.Clear" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.Contains" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.CtorDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.CtorNullCollection" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.CtorNullComparer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.EmptySubView" executed="True" success="True" time="0.001" asserts="24" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ExceptWith" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ExceptWith_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ExceptWithItself" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.GetEnumerator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.GetView" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.GetViewBetweenLowerBiggerThanUpper" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.IntersectWith" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.IntersectWith_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.Max" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.Min" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.Remove" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.RemoveWhere" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.Reverse" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ReverseView" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.SymetricExceptWithItself" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.SymmetricExceptWith" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.SymmetricExceptWith_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.TestSetCompares" executed="True" success="True" time="0.006" asserts="352" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.UnionWith" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.UnionWith_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewAdd" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewAddOutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewClear" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewContains" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewCount" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewExceptWith" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewGetView" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewGetViewLowerOutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewGetViewUpperOutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewIntersectWith" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewMax" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewMin" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewRemove" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewSymmetricExceptWith" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewSymmetricExceptWith_oor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewUnionWith" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.SortedSetTest.ViewUnionWith_oor" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="StackTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.DeserializeTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.DisposeEnumerator" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestClear" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestContains" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestCopyTo" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestCtor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestCtorEnum" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestCtorEnumNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestCtorEx" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestEnumerator" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestPeek" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestPeekEx" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestPeekEx2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestPop" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestPopEx" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestPopEx2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestPush" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TestToArray" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.StackTest.TrimExcessTest" executed="True" success="True" time="0.000" asserts="8" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ObjectModel" success="True" time="0.044" asserts="0">
                    <results>
                      <test-suite name="ObservableCollectionTest" success="True" time="0.040" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Add" executed="True" success="True" time="0.010" asserts="11" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Clear" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Constructor" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Constructor_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Insert" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Move" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Reentrant" executed="True" success="True" time="0.004" asserts="12" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.ReentrantReuseObject" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Remove" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.RemoveAt" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ObservableCollectionTest.Set" executed="True" success="True" time="0.000" asserts="12" />
                        </results>
                      </test-suite>
                      <test-suite name="ReadOnlyObservableCollectionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.ObjectModel.ReadOnlyObservableCollectionTest.ClassTest" executed="True" success="True" time="0.002" asserts="15" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Specialized" success="True" time="1.190" asserts="0">
                    <results>
                      <test-suite name="BasicOperationsTest" success="True" time="1.082" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.BasicOperationsTest.AddRemoveClearSetGet" executed="True" success="True" time="0.003" asserts="12" />
                          <test-case name="MonoTests.System.Collections.Specialized.BasicOperationsTest.CopyTo" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.BasicOperationsTest.GetKeyGetValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.BasicOperationsTest.UnderHeavyLoad" executed="True" success="True" time="1.077" asserts="2983" />
                        </results>
                      </test-suite>
                      <test-suite name="BitVector32Test" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.Constructors" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.Constructors_MaxValue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.Constructors_MinValue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.CreateMask" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.CreateMask_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.CreateSection" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.Indexers" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.NegativeIndexer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.Section" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.SectionCorrectSize" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.SectionIncorrectSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.TestCreateSection1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.TestCreateSection2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.TestCreateSection3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.BitVector32Test.TestSectionIndexer" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="HybridDictionaryTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.HybridDictionaryTest.All" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Collections.Specialized.HybridDictionaryTest.DefaultValues" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Collections.Specialized.HybridDictionaryTest.Empty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.HybridDictionaryTest.NotEmpty" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ListDictionaryTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.ListDictionaryTest.Constructor_Default" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Collections.Specialized.ListDictionaryTest.Constructor_IComparer" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Collections.Specialized.ListDictionaryTest.Constructor_IComparer_Null" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Collections.Specialized.ListDictionaryTest.CopyTo1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.ListDictionaryTest.CopyTo2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.ListDictionaryTest.Remove" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="NameObjectCollectionBaseTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Add_ReadOnly" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Clear_ReadOnly" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_Default" executed="True" success="True" time="0.002" asserts="19" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_IEqualityComparer" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_Int" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_Int_IEqualityComparer" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_Int_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_Int_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_Int_Provider_Comparer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_IntNegative_IEqualityComparer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Constructor_Provider_Comparer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.CopyTo_Array_Null" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.CopyTo_Index_Negative" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.CopyTo_MultipleDimensionStringArray" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.CopyTo_NotEnoughSpace" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.GetAllValues" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.GetAllValues_Type" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.GetAllValues_Type_Mismatch" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.GetObjectData" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.GetObjectData_IEqualityComparer" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.GetObjectData_Info_Null" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Remove_ReadOnly" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.RemoveAt_ReadOnly" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameObjectCollectionBaseTest.Set_ReadOnly" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="NameValueCollectionTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Add" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Add_Calls" executed="True" success="True" time="0.002" asserts="25" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Add_Multiples" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Add_Multiples_Null" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Add_NVC" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Add_NVC_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Add_NVC_Null2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CaseInsensitive" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Constructor_Capacity_Null_NVC" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Constructor_IEqualityComparer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Constructor_IEqualityComparer_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Constructor_Int_IEqualityComparer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Constructor_IntNegative_IEqualityComparer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Constructor_NameValueCollection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Constructor_Null_NVC" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CopyTo" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CopyTo_MultipleDimensionArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CopyTo_MultipleDimensionStringArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CopyTo_NegativeIndex" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CopyTo_NotEnoughSpace" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CopyTo_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.CopyTo_WrongTypeArray" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Get" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Get_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.GetKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.GetKey_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.GetValues" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.GetValues_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.HasKeys" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="32" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Set_New" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.NameValueCollectionTest.Set_Replace" executed="True" success="True" time="0.000" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="OrderedDictionaryTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.Constructor_Default" executed="True" success="True" time="0.002" asserts="20" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.Constructor_IEqualityComparer" executed="True" success="True" time="0.000" asserts="20" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.Constructor_Int" executed="True" success="True" time="0.000" asserts="20" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.Constructor_Int_IEqualityComparer" executed="True" success="True" time="0.000" asserts="20" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.Constructor_IntNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.Constructor_IntNegative_IEqualityComparer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.Constructor_NoCase_IEqualityComparer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.GetObjectData" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.GetObjectData_IEqualityComparer" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.GetObjectData_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.ReadOnly_Add" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.ReadOnly_Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.ReadOnly_Insert" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.ReadOnly_Remove" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.ReadOnly_RemoveAt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.ReadOnly_This_int" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.OrderedDictionaryTest.ReadOnly_This_String" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="StringCollectionTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.ICollection" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.IEnumerable" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.IList" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleAdd" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleAddRange" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleClear" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleContains" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleCopyTo" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleGetEnumerator" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleIndexOf" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleInsert" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleIsReadOnly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleIsSynchronized" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleItemGet" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleItemSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleRemove" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleRemoveAt" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringCollectionTest.SimpleSyncRoot" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="StringDictionaryTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Specialized.StringDictionaryTest.Add_NullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringDictionaryTest.ContainsKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringDictionaryTest.Empty" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringDictionaryTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringDictionaryTest.SomeElements" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringDictionaryTest.This_Empty" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Specialized.StringDictionaryTest.This_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="ComponentModel" success="True" time="0.951" asserts="0">
                <results>
                  <test-suite name="ArrayConverterTests" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ArrayConverterTests.ConvertTo" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.ArrayConverterTests.ConvertTo_DestinationType_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.ArrayConverterTests.GetProperties" executed="True" success="True" time="0.004" asserts="20" />
                      <test-case name="MonoTests.System.ComponentModel.ArrayConverterTests.GetProperties_Value_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.ArrayConverterTests.GetPropertiesSupported" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AsyncOperationManagerTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.AsyncOperationManagerTest.SyncContext" executed="True" success="True" time="0.001" asserts="13" />
                    </results>
                  </test-suite>
                  <test-suite name="AttributeCollectionTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.AttributeCollectionTest.AttributesTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.AttributeCollectionTest.Ctor_4_0" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AttributeProviderAttributeTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.AttributeProviderAttributeTest.CtorTest" executed="True" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="BackgroundWorkerTest" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.BackgroundWorkerTest.CancelAsyncNoCancellationSupported" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.BackgroundWorkerTest.CancelAsyncNonBusy" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.BackgroundWorkerTest.CancelBackgroundWorker" executed="True" success="True" time="0.003" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.BackgroundWorkerTest.CompleteBackgroundWorker" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.BackgroundWorkerTest.ExceptionBackgroundWorker" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.BackgroundWorkerTest.ReportProgressNonBusy" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.BackgroundWorkerTest.ReportProgressNoReportingSupported" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="BindingListTest" success="True" time="0.026" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.BindingListDefaults" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.BindingListDefaults_FixedSizeList" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.BindingListDefaults_NonFixedSizeList" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.BindingListDefaults_ReadOnlyList" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.Bug16902" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.Bug20672" executed="True" success="True" time="0.004" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.Bug8366" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNew" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNew_Cancel" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNew_CancelDifferentIndex" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNew_CancelDifferentIndexThenEnd" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNew_End" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNew_EndDifferentIndexThenCancel" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNew_SettingArgsNewObject" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAddNewCore_Insert" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAllowEditEvent" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAllowNew" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestAllowRemove" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestRemoveItem" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestRemoveItem_AllowRemoveFalse" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestResetBindings" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.BindingListTest.TestResetItem" executed="True" success="True" time="0.002" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="ByteConverterTests" success="True" time="0.023" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base10_MaxOverflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base10_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base16_MaxOverflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base16_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base16_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Base16_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Byte" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Int16" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_InvalidValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_MaxValue" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base10_MaxOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base10_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base16_MaxOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base16_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base16_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_Base16_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_InvalidValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertFromString_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertToString" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertToString_MaxValue" executed="True" success="True" time="0.005" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.ByteConverterTests.ConvertToString_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="CategoryAttributeTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.CategoryAttributeTest.CategoryNamesTest" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.ComponentModel.CategoryAttributeTest.CustomCategory" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CharConverterTest" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.CharConverterTest.CanConvertFrom" executed="True" success="True" time="0.004" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.CharConverterTest.CanConvertTo" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.CharConverterTest.ConvertFrom_String" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.CharConverterTest.ConvertFrom_String_Invalid" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.CharConverterTest.ConvertFrom_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.CharConverterTest.ConvertToString" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="CollectionConverterTest" success="True" time="0.034" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ApplicableTypes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertFrom" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertFrom_XmlSerializer" executed="True" success="True" time="0.025" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertFromString" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertFromString_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertFromString_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertTo" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertTo_TypeNotString" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.ConvertTo_TypeNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.GetProperties" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.CollectionConverterTest.GetPropertiesSupported" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ComplexBindingPropertiesAttributeTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ComplexBindingPropertiesAttributeTest.CtorTest" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.ComplexBindingPropertiesAttributeTest.DefaultTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.ComplexBindingPropertiesAttributeTest.EqualsTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ComplexBindingPropertiesAttributeTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ComponentConverterTests" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ComponentConverterTests.DataSetConversions" executed="True" success="True" time="0.010" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="ComponentResourceManagerTest" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ComponentResourceManagerTest.ApplyResources_ObjectName_Null" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.ComponentResourceManagerTest.ApplyResources_Value_Null" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.ComponentResourceManagerTest.Constructor0" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.ComponentModel.ComponentResourceManagerTest.Constructor1" executed="True" success="True" time="0.002" asserts="11" />
                      <test-case name="MonoTests.System.ComponentModel.ComponentResourceManagerTest.Constructor1_ResourceSource_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.ComponentResourceManagerTest.IgnoreCase" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ContainerTest" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Add1" executed="True" success="True" time="0.005" asserts="40" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Add1_Component_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Add2" executed="True" success="True" time="0.001" asserts="49" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Add2_Component_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Add2_Name_Duplicate" executed="True" success="True" time="0.005" asserts="37" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.AddRemove" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Dispose_Recursive" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Dispose1" executed="True" success="True" time="0.001" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Dispose2" executed="True" success="True" time="0.001" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.GetService" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Remove" executed="True" success="True" time="0.000" asserts="20" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.Remove_Component_Null" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.RemoveWithoutUnsiting" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.RemoveWithoutUnsiting_Component_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.ValidateName_Component_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.ValidateName_Name_Duplicate" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.ContainerTest.ValidateName_Name_Null" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CultureInfoConverterTest" success="True" time="0.027" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.CanConvertFrom" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.CanConvertTo" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.ConvertFrom_String" executed="True" success="True" time="0.011" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.ConvertFrom_String_IncompleteName" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.ConvertFrom_String_InvalidCulture" executed="True" success="True" time="0.006" asserts="18" />
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.ConvertFrom_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.ConvertToString" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.CultureInfoConverterTest.GetCultureName" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DataObjectMethodAttributeTests" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DataObjectMethodAttributeTests.Ctor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DataObjectMethodAttributeTests.EqualsTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.DataObjectMethodAttributeTests.MatchTest" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DateTimeConverterTests" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.CanConvertFrom" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFrom_InvalidValue" executed="True" success="True" time="0.013" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFrom_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFrom_String" executed="True" success="True" time="0.006" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFromString" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFromString_InvalidValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertFromString_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertToString" executed="True" success="True" time="0.001" asserts="11">
                        <properties>
                          <property name="_SETCULTURE" value="en-GB" />
                        </properties>
                      </test-case>
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertToString_MaxValue" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeConverterTests.ConvertToString_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="DateTimeOffsetConverterTests" success="True" time="0.017" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertFrom_InvalidValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertFrom_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertFrom_String" executed="True" success="True" time="0.005" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertFromString_InvalidValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertFromString_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertTo_DateTime" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertTo_DateTimeOffset" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertTo_InstanceDescriptor" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertTo_int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertTo_object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertToString" executed="True" success="True" time="0.001" asserts="10">
                        <properties>
                          <property name="_SETCULTURE" value="en-US" />
                        </properties>
                      </test-case>
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertToString_MaxValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DateTimeOffsetConverterTests.ConvertToString_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="DecimalConverterTests" success="True" time="0.015" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_Base10_MaxOverflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_Base10_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_InvalidValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFrom_String" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFromString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFromString_Base10_MaxOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFromString_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFromString_Base10_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFromString_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFromString_InvalidValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertFromString_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertToString_MaxValue" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DecimalConverterTests.ConvertToString_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="DefaultBindingPropertyAttributeTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DefaultBindingPropertyAttributeTest.CtorTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.DefaultBindingPropertyAttributeTest.DefaultTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DefaultBindingPropertyAttributeTest.EqualsTest" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DefaultBindingPropertyAttributeTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DefaultValueAttributeTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DefaultValueAttributeTest.Bool" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DefaultValueAttributeTest.Null" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="Design" success="True" time="0.051" asserts="0">
                    <results>
                      <test-suite name="CheckoutExceptionTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.ComponentModel.Design.CheckoutExceptionTest.Canceled" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.CheckoutExceptionTest.Constructor0" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.ComponentModel.Design.CheckoutExceptionTest.Constructor1" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.ComponentModel.Design.CheckoutExceptionTest.Constructor3" executed="True" success="True" time="0.000" asserts="14" />
                          <test-case name="MonoTests.System.ComponentModel.Design.CheckoutExceptionTest.Constructor4" executed="True" success="True" time="0.000" asserts="14" />
                        </results>
                      </test-suite>
                      <test-suite name="Serialization" success="True" time="0.019" asserts="0">
                        <results>
                          <test-suite name="ContextStackTest" success="True" time="0.005" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.ContextStackTest.Append_Context_Null" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.ContextStackTest.Indexer1" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.ContextStackTest.Indexer1_Level_Negative" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.ContextStackTest.Indexer2" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.ContextStackTest.Indexer2_Type_Null" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.ContextStackTest.IntegrityTest" executed="True" success="True" time="0.001" asserts="17" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.ContextStackTest.Push_Context_Null" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="InstanceDescriptorTest" success="True" time="0.012" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Constructor_MemberInfo_ICollection" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Constructor_MemberInfo_ICollection_Boolean" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Constructor_MemberInfo_Null_Boolean" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Constructor_Null_ICollection" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Constructor_Null_ICollection_Boolean" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Constructor0_Arguments_Mismatch" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Constructor0_MemberInfo_Type" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Field_Arguments_Empty" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Field_Arguments_Mismatch" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Field_Arguments_Null" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Field_MemberInfo_NonStatic" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Property_Arguments_Mismatch" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Property_Arguments_Null" executed="True" success="True" time="0.002" asserts="4" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Property_MemberInfo_NonStatic" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="MonoTests.System.ComponentModel.Design.Serialization.InstanceDescriptorTest.Property_MemberInfo_WriteOnly" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ServiceContainerTest" success="True" time="0.017" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService1" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService1_Disposed" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService1_ServiceInstance_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService1_ServiceType_Exists" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService1_ServiceType_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService2_Callback_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService2_Disposed" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService2_ServiceType_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService3" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService3_Disposed" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService3_ServiceInstance_Null" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService3_ServiceType_Null" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService4_Callback_Null" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.AddService4_ServiceType_Null" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.GeneralTest1" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.GeneralTest2" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.GetService_DefaultServices" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.ParentService" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.RemoveService1" executed="True" success="True" time="0.001" asserts="22" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.RemoveService1_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.RemoveService1_ServiceType_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.RemoveService2" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.RemoveService2_Disposed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.RemoveService2_ServiceType_Null" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.ComponentModel.Design.ServiceContainerTest.TestServiceCreator" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DesignerAttributeTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor1" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor1_DesignerTypeName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor2_DesignerType_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor3" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor3_DesignerBaseType_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor3_DesignerTypeName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor4" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor4_DesignerBaseTypeName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor4_DesignerTypeName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor5" executed="True" success="True" time="0.007" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor5_DesignerBaseTypeName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DesignerAttributeTest.Constructor5_DesignerTypeName_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DisplayNameAttributeTests" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.Constructor0" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.Constructor1" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.Default" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.Equals" executed="True" success="True" time="0.000" asserts="14" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.TestDefaultAttribute" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.TestEmptyName" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.TestNonEmptyName" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.DisplayNameAttributeTests.TestNullName" executed="True" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="DoubleConverterTests" success="True" time="0.033" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_Base10_MaxOverflow" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_Base10_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_InvalidValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFrom_String" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFromString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFromString_Base10_MaxOverflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFromString_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFromString_Base10_MinOverflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFromString_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFromString_InvalidValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertFromString_InvalidValue_Invariant" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertTo_Negative" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertTo_Positive" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertToString_Negative" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.DoubleConverterTests.ConvertToString_Positive" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="EnumConverterTests" success="True" time="0.041" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.CanConvertFrom" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="14" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertFrom_EnumArray" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertFrom_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertFrom_String" executed="True" success="True" time="0.003" asserts="24" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertFrom_String_Flags" executed="True" success="True" time="0.002" asserts="35" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertTo_EnumArray" executed="True" success="True" time="0.002" asserts="24" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertTo_EnumArray_Flags" executed="True" success="True" time="0.002" asserts="45" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertTo_InstanceDescriptor" executed="True" success="True" time="0.007" asserts="65" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertTo_InstanceDescriptor_Flags" executed="True" success="True" time="0.008" asserts="96" />
                      <test-case name="MonoTests.System.ComponentModel.EnumConverterTests.ConvertTo_String" executed="True" success="True" time="0.005" asserts="21" />
                    </results>
                  </test-suite>
                  <test-suite name="EventDescriptorCollectionTests" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Empty" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Find" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Find_Key_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.IList" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.IList_Add_NoEventDescriptor" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.IList_Add_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Indexer2" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Sort1" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Sort2" executed="True" success="True" time="0.001" asserts="30" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Sort3" executed="True" success="True" time="0.001" asserts="30" />
                      <test-case name="MonoTests.System.ComponentModel.EventDescriptorCollectionTests.Sort4" executed="True" success="True" time="0.002" asserts="54" />
                    </results>
                  </test-suite>
                  <test-suite name="EventHandlerListTests" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.EventHandlerListTests.All" executed="True" success="True" time="0.001" asserts="17" />
                      <test-case name="MonoTests.System.ComponentModel.EventHandlerListTests.NullKey" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="Int16ConverterTests" success="True" time="0.030" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base10_MaxOverflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base10_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base16_MaxOverflow" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base16_MaxOverflow_Invariant" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base16_MinOverflow" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Base16_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Int16" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_InvalidValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_MaxValue" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base10_MaxOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base10_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base10_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base10_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base16_MaxOverflow" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base16_MaxOverflow_Invariant" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base16_MinOverflow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_Base16_MinOverflow_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_InvalidValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertFromString_InvalidValue_Invariant" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertToString_MaxValue" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.Int16ConverterTests.ConvertToString_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="Int32ConverterTests" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_InvalidString1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_InvalidString2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_InvalidString3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_InvalidString4" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_MaxValue" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFromString" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFromString_Invalid1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFromString_Invalid2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFromString_Invalid3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertFromString_Invalid4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.Int32ConverterTests.IsValid" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="Int64ConverterTests" success="True" time="0.032" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_InvalidString1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_InvalidString2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_InvalidString3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_InvalidString4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_MaxValue" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFromString" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFromString_Invalid1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFromString_Invalid2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFromString_Invalid3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertFromString_Invalid4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.Int64ConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="InvalidEnumArgumentExceptionTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.InvalidEnumArgumentExceptionTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.InvalidEnumArgumentExceptionTest.Constructor1" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.ComponentModel.InvalidEnumArgumentExceptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.ComponentModel.InvalidEnumArgumentExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.InvalidEnumArgumentExceptionTest.Constructor4_EnumClass_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="LicenseManagerTests" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.LicenseManagerTests.Test" executed="True" success="True" time="0.005" asserts="37" />
                    </results>
                  </test-suite>
                  <test-suite name="ListChangedEventArgsTests" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ListChangedEventArgsTests.Ctor_ListChangedType_NewIndex" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ListChangedEventArgsTests.Ctor_ListChangedType_NewIndex_OldIndex" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ListChangedEventArgsTests.Ctor_ListChangedType_NewIndex_PropDesc" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ListChangedEventArgsTests.Ctor_ListChangedType_PropDesc" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="LookupBindingPropertiesAttributeTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.LookupBindingPropertiesAttributeTest.CtorTest" executed="True" success="True" time="0.001" asserts="20" />
                    </results>
                  </test-suite>
                  <test-suite name="MaskedTextProviderTest" success="True" time="0.157" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Add_char_int_MaskedTextResultHint_Test04657" executed="True" success="True" time="0.009" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Add_string_int_MaskedTextResultHint_Test00001" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Add_string_int_MaskedTextResultHint_Test00012" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Add_string_int_MaskedTextResultHint_Test00029" executed="True" success="True" time="0.003" asserts="476" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Add_string_int_MaskedTextResultHint_Test00896" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Add_string_Test42871" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.AddStringExceptionTest1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.AddStringExceptionTest2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.CloneTest" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.DefaultCultureTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.EditPositionsTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionFromTest1" executed="True" success="True" time="0.000" asserts="35" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionInRangeTest1" executed="True" success="True" time="0.001" asserts="75" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionInRangeTest10" executed="True" success="True" time="0.007" asserts="363" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionInRangeTest12" executed="True" success="True" time="0.005" asserts="363" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionInRangeTest13" executed="True" success="True" time="0.022" asserts="1083" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionInRangeTest2" executed="True" success="True" time="0.001" asserts="75" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionInRangeTest4" executed="True" success="True" time="0.001" asserts="123" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindAssignedEditPositionInRangeTest7" executed="True" success="True" time="0.015" asserts="907" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.FindEditPositionInRangeTest1" executed="True" success="True" time="0.001" asserts="75" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.GetOperationResultFromHintTest" executed="True" success="True" time="0.000" asserts="15" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest" executed="True" success="True" time="0.001" asserts="174" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00001" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00037" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00038" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00040" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00110" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00113" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00328" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest00330" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_char_int_int_MaskedTextResultHintTest04290" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_charTest" executed="True" success="True" time="0.002" asserts="261" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00001" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00004" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00010" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00011" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00013" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00054" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00068" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00069" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00073" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00142" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest00145" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTest02650" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_int_MaskedTextResultHintTestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_Test" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.InsertAt_string_int_TestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.IsAvailablePositionTest00001" executed="True" success="True" time="0.000" asserts="31" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.IsPasswordTest" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ItemTestExceptionLength" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ItemTestExceptionNegative1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.MaskCompletedTest" executed="True" success="True" time="0.002" asserts="54" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.PasswordTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Remove_int_MaskedTextResultHintTest00001" executed="True" success="True" time="0.001" asserts="168" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Remove_int_MaskedTextResultHintTest00004" executed="True" success="True" time="0.001" asserts="224" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00001" executed="True" success="True" time="0.001" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00002" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00010" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00028" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00029" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00030" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00031" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00032" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00048" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00068" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00111" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00114" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00148" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest00958" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAt_int_int_int_MaskedTextResultHintTest01006" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveAtTest" executed="True" success="True" time="0.001" asserts="189" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.RemoveTest00001" executed="True" success="True" time="0.001" asserts="156" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00001" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00010" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00013" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00016" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00055" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00067" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00341" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00416" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest00417" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest02971" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest03661" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest05988" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest08681" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest08686" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest118783" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_int_MaskedTextResultHintTest60913" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00004" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00007" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00037" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00038" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00052" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00076" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00077" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_char_int_int_MaskedTextResultHintTest00871" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00001" executed="True" success="True" time="0.002" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00016" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00040" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00130" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00137" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00176" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00618" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest00636" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest01918" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTest01918bis" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_int_MaskedTextResultHintTestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_MaskedTextResultHintTest00037" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_int_MaskedTextResultHintTestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_Test00076" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_Test00077" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Replace_string_int_TestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ReplaceTest" executed="True" success="True" time="0.001" asserts="112" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Set_string_int_MaskedTextResultHintTest00001" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Set_string_int_MaskedTextResultHintTest00002" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Set_string_int_MaskedTextResultHintTest00004" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Set_string_int_MaskedTextResultHintTest00016" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Set_string_int_MaskedTextResultHintTestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.Set_string_TestException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.StaticPropertiesTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ToDisplayString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ToString_bool_bool_bool_int_int_Test00043" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ToString_bool_bool_bool_int_int_Test00055" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ToString_bool_bool_int_int_Test00008" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ToString_False_FalseTest" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.ToString_PasswordTest" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.VerifyCharTest00001" executed="True" success="True" time="0.000" asserts="27" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.VerifyCharTest00064" executed="True" success="True" time="0.000" asserts="27" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.VerifyCharTest01186" executed="True" success="True" time="0.000" asserts="27" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.VerifyEscapeCharTest00001" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.VerifyEscapeCharTest00067" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.VerifyString_string_int_MaskedTextResultHintTest00007" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.ComponentModel.MaskedTextProviderTest.VerifyString_string_int_MaskedTextResultHintTest00010" executed="True" success="True" time="0.000" asserts="28" />
                    </results>
                  </test-suite>
                  <test-suite name="MultilineStringConverterTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.MultilineStringConverterTest.ConvertTo" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.MultilineStringConverterTest.GetProperties" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.MultilineStringConverterTest.GetPropertiesSupported" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="NestedContainerTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.NestedContainerTest.DesignModeTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.NestedContainerTest.GetServiceTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.NestedContainerTest.NameTest" executed="True" success="True" time="0.001" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="NullableConverterTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.NullableConverterTest.CanConvertFrom" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.NullableConverterTest.CanConvertTo" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.NullableConverterTest.ConvertFrom_EmptyString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.NullableConverterTest.GetStandardValues" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.NullableConverterTest.PropertyValues" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="PropertyDescriptorCollectionTests" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Empty" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Find" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Find_Name_Null" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.IDictionary" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.IDictionary_Add_NoPropertyDescriptor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.IDictionary_Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.IList" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.IList_Add_NoPropertyDescriptor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.IList_Add_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Indexer2" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Indexer2_Name_Null" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Sort1" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Sort2" executed="True" success="True" time="0.001" asserts="30" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Sort3" executed="True" success="True" time="0.001" asserts="30" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorCollectionTests.Sort4" executed="True" success="True" time="0.001" asserts="54" />
                    </results>
                  </test-suite>
                  <test-suite name="PropertyDescriptorTests" success="True" time="0.041" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.AddValueChanged" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.AddValueChanged_Component_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.AddValueChanged_Handler_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.Attributes" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.CanResetTest_private" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.CanResetTest_protected" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.CanResetTest_public" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.CanResetTestNoSetterTest" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ConverterTest" executed="True" success="True" time="0.003" asserts="20" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.DisplayNameTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.GetEditorTest" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.GetInvocationTarget_Instance_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.GetInvocationTarget_Type_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.GetValueChangedHandler" executed="True" success="True" time="0.001" asserts="31" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.MissingTypeConverter" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.NoSerializeOrResetPropTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ReadOnlyAttributeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ReadOnlyConflictingTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ReadOnlyPropertyTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.RemoveValueChanged" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.RemoveValueChanged_Component_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.RemoveValueChanged_Handler_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ShouldSerializeFalseEffectOnCanResetTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ShouldSerializeTest_No_Default" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ShouldSerializeTest_Null_Default" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ShouldSerializeTest_private" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ShouldSerializeTest_protected" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ShouldSerializeTest_public" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.ShouldSerializeTest_ReadOnly" executed="True" success="True" time="0.002" asserts="22" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.VirtualPropertyDontOverrideGetter" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.PropertyDescriptorTests.VirtualPropertyDontOverrideSetter" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ReferenceConverterTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ReferenceConverterTest.CanConvertFrom" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.ReferenceConverterTest.CanConvertTo" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.ReferenceConverterTest.ConvertFrom" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.ReferenceConverterTest.ConvertTo" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.ReferenceConverterTest.GetStandardValues" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SByteConverterTests" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_Byte" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_Int16" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_InvalidString1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_InvalidString2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_InvalidString3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_InvalidString4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_InvalidString5" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFrom_String" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFromString" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFromString_Invalid1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFromString_Invalid2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFromString_Invalid3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertFromString_Invalid4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SByteConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SingleConverterTests" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFrom_HexString1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFrom_HexString2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFrom_InvalidString1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFrom_InvalidString2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFrom_String" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFromString" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFromString_Hex1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFromString_Hex2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFromString_Invalid1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertFromString_Invalid2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertTo" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.SingleConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ToolboxItemAttributeTests" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.ToolboxItemAttributeTests.DefaultType" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.ToolboxItemAttributeTests.InvalidItemTypeName" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.ToolboxItemAttributeTests.NonDefaultType" executed="True" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="TypeConverterTests" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.TypeConverterTests.ConvertToWithCulture" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.TypeConverterTests.DefaultImplementation" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.ComponentModel.TypeConverterTests.GetConvertFromException" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.TypeConverterTests.GetConvertToException" executed="True" success="True" time="0.000" asserts="11" />
                      <test-case name="MonoTests.System.ComponentModel.TypeConverterTests.GetProperties" executed="True" success="True" time="0.002" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.TypeConverterTests.IsValid" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.TypeConverterTests.TestGenericTypeConverterInstantiation" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="TypeDescriptionProviderTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptionProviderTest.GetExtenderProviders" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptionProviderTest.GetRuntimeType" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptionProviderTest.IsSupportedType" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="TypeDescriptorTests" success="True" time="0.056" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.CustomTypeDescriptorsShouldBeUsedForInstance" executed="True" success="True" time="0.005" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.CustomTypeDescriptorsShouldBeUsedForType" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.DynamicAttributesShouldBeReturnedForInstance" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.DynamicAttributesShouldBeReturnedForType" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.GetProperties_Order" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.GetPropertiesIgnoreIndexers" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.InterfaceType" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddAttributes_Instance_Attributes_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddAttributes_Instance_Attributes_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddAttributes_Instance_Attributes_3" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddAttributes_Type_Attributes_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddAttributes_Type_Attributes_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddAttributes_Type_Attributes_3" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddProvider_Provider_Instance_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddProvider_Provider_Instance_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddProvider_Provider_Instance_3" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddProvider_Provider_Instance_4" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddProvider_Provider_Type_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddProvider_Provider_Type_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestAddProvider_Provider_Type_3" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestConverterCtorWithArgument" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestCreateDesigner" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestCreateEvent" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestCreateProperty" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetAttributes" executed="True" success="True" time="0.002" asserts="17" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetClassName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetComponentName" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetConverter" executed="True" success="True" time="0.002" asserts="32" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetConverterNullParam" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetDefaultEvent" executed="True" success="True" time="0.004" asserts="11" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetDefaultProperty" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetDefaultProperty2" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetEvents" executed="True" success="True" time="0.002" asserts="32" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetProperties" executed="True" success="True" time="0.002" asserts="29" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetProperties2" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetProvider_Instance_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetProvider_Instance_2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetProvider_Type_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetProvider_Type_2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetReflectionType_Instance_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetReflectionType_Instance_2" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetReflectionType_Type_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestGetReflectionType_Type_2" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestICustomTypeDescriptor" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestRemoveProvider_Provider_Instance_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestRemoveProvider_Provider_Instance_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestRemoveProvider_Provider_Instance_3" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestRemoveProvider_Provider_Type_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestRemoveProvider_Provider_Type_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.TypeDescriptorTests.TestRemoveProvider_Provider_Type_3" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="UInt16ConverterTests" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_Int16" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_InvalidString1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_InvalidString2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_InvalidString3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_InvalidString4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_MaxValue" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFromString_Invalid1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFromString_Invalid2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFromString_Invalid3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertFromString_Invalid4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt16ConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="UInt32ConverterTests" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFrom_InvalidString1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFrom_InvalidString2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFrom_InvalidString3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFrom_InvalidString4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFrom_MaxValue" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFrom_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFromString_Invalid1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFromString_Invalid2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFromString_Invalid3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertFromString_Invalid4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt32ConverterTests.ConvertToString" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="UInt64ConverterTests" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.CanConvertFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.CanConvertTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_Int32" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_InvalidString1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_InvalidString2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_InvalidString3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_InvalidString4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_MaxValue" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFrom_Object" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFromString_Invalid1" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFromString_Invalid2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFromString_Invalid3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertFromString_Invalid4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertTo_MaxValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertTo_MinValue" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.ComponentModel.UInt64ConverterTests.ConvertToString" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Win32ExceptionTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.ComponentModel.Win32ExceptionTest.Constructor0" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.ComponentModel.Win32ExceptionTest.Constructor1" executed="True" success="True" time="0.000" asserts="15" />
                      <test-case name="MonoTests.System.ComponentModel.Win32ExceptionTest.Constructor2" executed="True" success="True" time="0.000" asserts="14" />
                      <test-case name="MonoTests.System.ComponentModel.Win32ExceptionTest.Constructor3" executed="True" success="True" time="0.000" asserts="18" />
                      <test-case name="MonoTests.System.ComponentModel.Win32ExceptionTest.Constructor4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.ComponentModel.Win32ExceptionTest.Constructor5" executed="True" success="True" time="0.000" asserts="18" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Configuration" success="True" time="0.235" asserts="0">
                <results>
                  <test-suite name="ApplicationSettingsBaseTest" success="True" time="0.137" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.DefaultSettingValueAs" executed="True" success="True" time="0.026" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.DefaultSettingValueAsWithReload" executed="True" success="True" time="0.009" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.Synchronized" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestBug8533ConfHandlerWronglyMixedUp" executed="True" success="True" time="0.038" asserts="7" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestBug8592BasicOperations" executed="True" success="True" time="0.025" asserts="7" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings1_Properties" executed="True" success="True" time="0.005" asserts="7" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings1_Provider" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings1_SetProperty" executed="True" success="True" time="0.006" asserts="8" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings1_SetPropertyCancel" executed="True" success="True" time="0.005" asserts="7" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings1_SettingsLoaded" executed="True" success="True" time="0.008" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings2_Properties" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings3_Properties" executed="False">
                        <reason>
                          <message><![CDATA[On MS.NET it returns null ...]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Configuration.ApplicationSettingsBaseTest.TestSettings4_StringCollection_DefaultSettingValue" executed="True" success="True" time="0.008" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="ConfigurationExceptionTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.ConfigurationExceptionTest.Constructor1" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Configuration.ConfigurationExceptionTest.Constructor2" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Configuration.ConfigurationExceptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Configuration.ConfigurationExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Configuration.ConfigurationExceptionTest.Constructor5" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Configuration.ConfigurationExceptionTest.Constructor6" executed="True" success="True" time="0.002" asserts="77" />
                      <test-case name="MonoTests.System.Configuration.ConfigurationExceptionTest.Constructor7" executed="True" success="True" time="0.002" asserts="49" />
                    </results>
                  </test-suite>
                  <test-suite name="ConfigXmlDocumentTest" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.ConfigXmlDocumentTest.Load" executed="True" success="True" time="0.008" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="LocalFileSettingsProviderTest" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.LocalFileSettingsProviderTest.GetApplicationScopedPropertyValues" executed="True" success="True" time="0.004" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.LocalFileSettingsProviderTest.GetUserScopedPropertyValues" executed="True" success="True" time="0.007" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.LocalFileSettingsProviderTest.Initialized" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.LocalFileSettingsProviderTest.Properties" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="SettingElementTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.SettingElementTest.CollectionAddNameless" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.SettingElementTest.CollectionAddNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingElementTest.CollectionGetNonExistent" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.SettingElementTest.Initial" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SettingsBaseTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.AddPropertyNoProviderButInProviders" executed="False">
                        <reason>
                          <message><![CDATA[.NET throws NRE, which means that it is not well designed.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.AddPropertyTypeMismatch" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.ExceptionalGetPropertyValues" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.PropertiesOverriden" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.PropertyDefaults" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.PropertyValuesInitialized" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.PropertyValuesInstance" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.PropertyValuesUninitialized" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.ProviderCollectionAddDuplicate" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsBaseTest.ProviderCollectionAddNameless" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="SettingsPropertyCollectionTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.Add" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.AddDuplicate" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.ReadOnly_Add" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.ReadOnly_Clear" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.ReadOnly_Remove" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyCollectionTest.Remove_NonExistant" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SettingsPropertyTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyTest.Ctor_1" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyTest.Ctor_2" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyTest.Ctor_2_AttributesNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyTest.Ctor_2_NameNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyTest.Ctor_3" executed="True" success="True" time="0.000" asserts="9" />
                    </results>
                  </test-suite>
                  <test-suite name="SettingsPropertyValueCollectionTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.Add" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.AddDuplicate" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.ReadOnly_Add" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.ReadOnly_Clear" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.ReadOnly_Remove" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueCollectionTest.Remove_NonExistant" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SettingsPropertyValueTest" success="True" time="0.032" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.Binary_Serialize" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.DefaultValueCompexType" executed="True" success="True" time="0.012" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.DefaultValueCompexTypeEmpty" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.DefaultValueType" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.Dirty" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.IsDirtyAndValueArrayList" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.IsDirtyAndValueDateTime" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.IsDirtyAndValueDecimal" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.IsDirtyAndValueMyData2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.IsDirtyAndValuePrimitive" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.IsDirtyAndValueString" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.Properties" executed="True" success="True" time="0.006" asserts="10" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.String_Deserialize" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.String_Xml_Serialize" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.UsingDefaultValue" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Configuration.SettingsPropertyValueTest.Xml_Deserialize" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Diagnostics" success="True" time="7.920" asserts="0">
                <results>
                  <test-suite name="CounterCreationDataTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.CounterCreationDataTest.CounterHelp_Empty" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DebugTest2" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.DebugTest2.TestAssert" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.DebugTest2.TestFail" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.DebugTest2.TestWrite" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.DebugTest2.TestWriteIf" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.DebugTest2.TestWriteLine" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.DebugTest2.TestWriteLineIf" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DelimitedListTraceListenerTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.DelimitedListTraceListenerTest.TraceDataWithCache1" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.DelimitedListTraceListenerTest.TraceDataWithCache2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.DelimitedListTraceListenerTest.TraceEvent1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.DelimitedListTraceListenerTest.TraceEvent2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.DelimitedListTraceListenerTest.TraceTransfer1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.DelimitedListTraceListenerTest.WriteLine1" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DiagnosticsConfigurationHandlerTest" success="True" time="0.035" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.DiagnosticsConfigurationHandlerTest.AssertTag" executed="True" success="True" time="0.009" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.DiagnosticsConfigurationHandlerTest.PerformanceCountersTag" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.DiagnosticsConfigurationHandlerTest.SwitchesTag_Attributes" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.DiagnosticsConfigurationHandlerTest.SwitchesTag_Elements" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.DiagnosticsConfigurationHandlerTest.TraceTag_Attributes" executed="True" success="True" time="0.017" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.DiagnosticsConfigurationHandlerTest.TraceTag_Children" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.DiagnosticsConfigurationHandlerTest.TraceTag_Listeners" executed="True" success="True" time="0.002" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="EventInstanceTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.CategoryId" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.CategoryId_Invalid" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.Constructor1" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.Constructor1_CategoryId_Invalid" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.Constructor1_InstanceId_Invalid" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.Constructor2" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.Constructor2_CategoryId_Invalid" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.Constructor2_EntryType_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.Constructor2_InstanceId_Invalid" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.EntryType" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.EntryType_Invalid" executed="True" success="True" time="0.000" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.InstanceId" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventInstanceTest.InstanceId_Invalid" executed="True" success="True" time="0.000" asserts="9" />
                    </results>
                  </test-suite>
                  <test-suite name="EventLogCreationDataTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.CategoryCount" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.CategoryCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.CategoryResourceFile" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.Constructor1" executed="True" success="True" time="0.001" asserts="36" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.LogName" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.MachineName" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.MessageResourceFile" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.ParameterResourceFile" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogCreationDataTest.Source" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="EventLogPermissionAttributeTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.Default" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.MachineName" executed="True" success="True" time="0.001" asserts="249" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.MachineName_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.MachineName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.PermissionAccess" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.PermissionAccess_Invalid" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="EventLogPermissionTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Constructor_MachineName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Constructor_PermissionEntries_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Copy" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.EventLogPermissionAccesss_Bad" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Intersect_BadPermission" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Intersect_None" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Intersect_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Intersect_Unrestricted" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.IsSubset_None" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.IsSubset_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.IsSubset_Self" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.IsSubset_Unrestricted" executed="True" success="True" time="0.000" asserts="13" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.IsSubsetOf_BadPermission" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.PermissionEntries" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.PermissionState_None" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.PermissionState_Unrestricted" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Union_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Union_None" executed="True" success="True" time="0.001" asserts="24" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Union_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Union_Self" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogPermissionTest.Union_Unrestricted" executed="True" success="True" time="0.000" asserts="24" />
                    </results>
                  </test-suite>
                  <test-suite name="EventLogTest" success="True" time="1.479" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Clear" executed="True" success="True" time="0.036" asserts="59" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Clear_Log_DoesNotExist" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Clear_Log_Empty" executed="True" success="True" time="0.012" asserts="13" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Clear_Source_DoesNotExist" executed="True" success="True" time="0.011" asserts="7" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Clear_Source_Empty" executed="True" success="True" time="0.011" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Clear_Source_Null" executed="True" success="True" time="0.011" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor1" executed="True" success="True" time="0.002" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor2" executed="True" success="True" time="0.010" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor2_Log_DoesNotExist" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor2_Log_Empty" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor2_Log_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor3" executed="True" success="True" time="0.010" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor3_Log_DoesNotExist" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor3_Log_Empty" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor3_Log_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor3_MachineName_Empty" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor3_MachineName_Null" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4" executed="True" success="True" time="0.010" asserts="11" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_Log_DoesNotExist" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_Log_Empty" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_Log_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_MachineName_Empty" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_MachineName_Null" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_Source_DoesNotExist" executed="True" success="True" time="0.012" asserts="14" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_Source_Empty" executed="True" success="True" time="0.011" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Constructor4_Source_Null" executed="True" success="True" time="0.010" asserts="11" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1" executed="True" success="True" time="0.013" asserts="32" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1_Log_Empty" executed="True" success="True" time="0.011" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1_Log_ExistsAsSource" executed="True" success="True" time="0.011" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1_Log_InvalidCustomerLog" executed="False">
                        <reason>
                          <message><![CDATA[No EventLogImplType.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1_Log_NotUnique" executed="False">
                        <reason>
                          <message><![CDATA[No EventLogImplType.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1_Log_Null" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.CreateEventSource1_Source_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete1" executed="True" success="True" time="0.033" asserts="24" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete1_Log_DoesNotExist" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete1_Log_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete1_Log_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete2" executed="True" success="True" time="0.032" asserts="24" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete2_Log_DoesNotExist" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete2_Log_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete2_Log_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete2_MachineName_Empty" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Delete2_MachineName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource1" executed="True" success="True" time="0.012" asserts="14" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource1_Source_DoesNotExist" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource1_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource1_Source_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource2" executed="True" success="True" time="0.013" asserts="14" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource2_MachineName_Empty" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource2_MachineName_Null" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource2_Source_DoesNotExist" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource2_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.DeleteEventSource2_Source_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Entries" executed="True" success="True" time="0.019" asserts="59" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Entries_Log_DoesNotExist" executed="True" success="True" time="0.003" asserts="21" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Entries_Log_Empty" executed="True" success="True" time="0.011" asserts="42" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Entries_Source_DoesNotExist" executed="True" success="True" time="0.014" asserts="57" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Entries_Source_Empty" executed="True" success="True" time="0.013" asserts="54" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Entries_Source_Null" executed="True" success="True" time="0.014" asserts="57" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists1_Log_Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists1_Log_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists1_Win32" executed="False">
                        <reason>
                          <message><![CDATA[Wrong EventLogImplType.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists2_Log_Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists2_Log_Null" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists2_MachineName_Empty" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists2_MachineName_Null" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Exists2_Win32" executed="False">
                        <reason>
                          <message><![CDATA[Wrong EventLogImplType.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Log" executed="True" success="True" time="0.012" asserts="10" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Log_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.LogNameFromSourceName" executed="True" success="True" time="0.012" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.LogNameFromSourceName_MachineName_Empty" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.LogNameFromSourceName_MachineName_Null" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.LogNameFromSourceName_Source_DoesNotExist" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.LogNameFromSourceName_Source_Empty" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.LogNameFromSourceName_Source_Null" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.MachineName" executed="True" success="True" time="0.007" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.MachineName_Empty" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.MachineName_Null" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.Source" executed="True" success="True" time="0.011" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists1_Source_Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists1_Source_Null" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists1_Win32" executed="False">
                        <reason>
                          <message><![CDATA[Wrong EventLogImplType.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists2_MachineName_Empty" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists2_MachineName_Null" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists2_Source_Empty" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists2_Source_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.SourceExists2_Win32" executed="False">
                        <reason>
                          <message><![CDATA[Wrong EventLogImplType.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry1" executed="True" success="True" time="0.014" asserts="39" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry1_Log_Empty" executed="True" success="True" time="0.013" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry1_Log_Mismatch" executed="True" success="True" time="0.011" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry1_Message_Empty" executed="True" success="True" time="0.013" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry1_Message_Null" executed="True" success="True" time="0.013" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry1_Source_DoesNotExist" executed="True" success="True" time="0.016" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry1_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10" executed="True" success="True" time="0.019" asserts="56" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10_EventID_Invalid" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10_Message_Empty" executed="True" success="True" time="0.013" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10_Message_Null" executed="True" success="True" time="0.013" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10_Source_DoesNotExist" executed="True" success="True" time="0.012" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10_Source_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry10_Type_NotDefined" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2" executed="True" success="True" time="0.014" asserts="39" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2_Log_Empty" executed="True" success="True" time="0.011" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2_Log_Mismatch" executed="True" success="True" time="0.012" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2_Message_Empty" executed="True" success="True" time="0.012" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2_Message_Null" executed="True" success="True" time="0.014" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2_Source_DoesNotExist" executed="True" success="True" time="0.014" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry2_Type_NotDefined" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry3" executed="True" success="True" time="0.014" asserts="39" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry3_Message_Empty" executed="True" success="True" time="0.016" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry3_Message_Null" executed="True" success="True" time="0.015" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry3_Source_DoesNotExist" executed="True" success="True" time="0.016" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry3_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry3_Source_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4" executed="True" success="True" time="0.017" asserts="56" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_EventID_Invalid" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_Log_Empty" executed="True" success="True" time="0.013" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_Log_Mismatch" executed="True" success="True" time="0.012" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_Message_Empty" executed="True" success="True" time="0.013" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_Message_Null" executed="True" success="True" time="0.013" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_Source_DoesNotExist" executed="True" success="True" time="0.013" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry4_Type_NotDefined" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry5" executed="True" success="True" time="0.013" asserts="39" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry5_Message_Empty" executed="True" success="True" time="0.013" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry5_Message_Null" executed="True" success="True" time="0.014" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry5_Source_DoesNotExist" executed="True" success="True" time="0.014" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry5_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry5_Source_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry5_Type_NotDefined" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6" executed="True" success="True" time="0.014" asserts="56" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_EventID_Invalid" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_Log_Empty" executed="True" success="True" time="0.012" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_Log_Mismatch" executed="True" success="True" time="0.012" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_Message_Empty" executed="True" success="True" time="0.012" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_Message_Null" executed="True" success="True" time="0.014" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_Source_DoesNotExist" executed="True" success="True" time="0.014" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry6_Type_NotDefined" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7" executed="True" success="True" time="0.016" asserts="56" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7_EventID_Invalid" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7_Message_Empty" executed="True" success="True" time="0.012" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7_Message_Null" executed="True" success="True" time="0.012" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7_Source_DoesNotExist" executed="True" success="True" time="0.013" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7_Source_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry7_Type_NotDefined" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8" executed="True" success="True" time="0.016" asserts="56" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_EventID_Invalid" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_Log_Empty" executed="True" success="True" time="0.013" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_Log_Mismatch" executed="True" success="True" time="0.016" asserts="15" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_Message_Empty" executed="True" success="True" time="0.013" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_Message_Null" executed="True" success="True" time="0.015" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_Source_DoesNotExist" executed="True" success="True" time="0.014" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry8_Type_NotDefined" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9" executed="True" success="True" time="0.016" asserts="56" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9_EventID_Invalid" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9_Message_Empty" executed="True" success="True" time="0.019" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9_Message_Null" executed="True" success="True" time="0.024" asserts="17" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9_Source_DoesNotExist" executed="True" success="True" time="0.017" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9_Source_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEntry9_Type_NotDefined" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent1" executed="True" success="True" time="0.016" asserts="42" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent1_Instance_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent1_Source_DoesNotExist" executed="True" success="True" time="0.014" asserts="23" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent1_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent1_Values_Null" executed="True" success="True" time="0.015" asserts="23" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent2" executed="True" success="True" time="0.015" asserts="42" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent2_Data_Null" executed="True" success="True" time="0.013" asserts="25" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent2_Instance_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent2_Source_DoesNotExist" executed="True" success="True" time="0.013" asserts="24" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent2_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent2_Values_Null" executed="True" success="True" time="0.013" asserts="22" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent3" executed="True" success="True" time="0.014" asserts="42" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent3_Instance_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent3_Source_DoesNotExist" executed="True" success="True" time="0.012" asserts="21" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent3_Source_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent3_Values_Null" executed="True" success="True" time="0.013" asserts="23" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent4" executed="True" success="True" time="0.015" asserts="42" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent4_Data_Null" executed="True" success="True" time="0.012" asserts="25" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent4_Instance_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent4_Source_DoesNotExist" executed="True" success="True" time="0.014" asserts="21" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent4_Source_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.EventLogTest.WriteEvent4_Values_Null" executed="True" success="True" time="0.016" asserts="23" />
                    </results>
                  </test-suite>
                  <test-suite name="FileVersionInfoTest" success="True" time="0.093" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1a" executed="True" success="True" time="0.014" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1b" executed="True" success="True" time="0.004" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1c" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1d" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1e" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1f" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1g" executed="True" success="True" time="0.001" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineUnmanagedResource1h" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1a" executed="True" success="True" time="0.006" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1b" executed="True" success="True" time="0.001" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1c" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1d" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1e" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1f" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1g" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1h" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1i" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1j" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1k" executed="True" success="True" time="0.001" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1l" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource1m" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2a" executed="True" success="True" time="0.001" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2b" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2c" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2d" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2e" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2f" executed="True" success="True" time="0.001" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2g" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2h" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2i" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2j" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2k" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.DefineVersionInfoResource2l" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.GetVersionInfo_FileName_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.GetVersionInfo_FileName_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.GetVersionInfo_NoNativeResources" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Diagnostics.FileVersionInfoTest.GetVersionInfo_TextFile" executed="True" success="True" time="0.003" asserts="27" />
                    </results>
                  </test-suite>
                  <test-suite name="PerformanceCounterPermissionAttributeTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.CategoryName" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.CategoryName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.Default" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.MachineName" executed="True" success="True" time="0.000" asserts="249" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.MachineName_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.MachineName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.PermissionAccess" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.PermissionAccess_Invalid" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="PerformanceCounterPermissionTest" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Constructor_CategoryName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Constructor_MachineName_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Constructor_PermissionEntries_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Copy" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Intersect_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Intersect_None" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Intersect_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Intersect_Unrestricted" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.IsSubset_None" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.IsSubset_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.IsSubset_Self" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.IsSubset_Unrestricted" executed="True" success="True" time="0.000" asserts="13" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.IsSubsetOf_BadPermission" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.PerformanceCounterPermissionAccesss_Bad" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.PermissionEntries" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.PermissionState_None" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.PermissionState_Unrestricted" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Union_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Union_None" executed="True" success="True" time="0.001" asserts="24" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Union_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Union_Self" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.Diagnostics.PerformanceCounterPermissionTest.Union_Unrestricted" executed="True" success="True" time="0.001" asserts="24" />
                    </results>
                  </test-suite>
                  <test-suite name="ProcessStartInfoTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.ProcessStartInfoTest.NotNullCommonProperties" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessStartInfoTest.StandardErrorEncodingWithoutRedirect" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessStartInfoTest.StandardErrorOutputEncoding" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessStartInfoTest.StandardOutputEncodingWithoutRedirect" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ProcessTest" success="True" time="2.078" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.GetProcessById_MachineName_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.GetProcesses_MachineName_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.GetProcesses_StartTime" executed="True" success="True" time="0.026" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Handle_ThrowsOnNotStarted" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.HasExitedCurrent" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.PriorityClass_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.PriorityClass_NotStarted" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.ProcessName_AfterExit" executed="True" success="True" time="0.006" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.ProcessName_NotStarted" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start_UseShellExecuteWithEmptyUserName" executed="False">
                        <reason>
                          <message><![CDATA[On Unix and Mac OS X, we try to open any file (using xdg-open, ...) and we do not report an exception if this fails.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start1_FileName_Empty" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start1_FileName_InvalidPathCharacters" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start1_FileName_NotFound" executed="False">
                        <reason>
                          <message><![CDATA[On Unix and Mac OS X, we try to open any file (using xdg-open, ...) and we do not report an exception if this fails.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start1_FileName_Null" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start1_FileName_Whitespace" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start2_FileName_Empty" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start2_FileName_NotFound" executed="False">
                        <reason>
                          <message><![CDATA[On Unix and Mac OS X, we try to open any file (using xdg-open, ...) and we do not report an exception if this fails.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start2_FileName_Null" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start2_FileName_Whitespace" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start2_StartInfo_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start3_FileName_Empty" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start3_FileName_NotFound" executed="False">
                        <reason>
                          <message><![CDATA[On Unix and Mac OS X, we try to open any file (using xdg-open, ...) and we do not report an exception if this fails.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start3_FileName_Null" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start4_Arguments_Null" executed="False">
                        <reason>
                          <message><![CDATA[On Unix and Mac OS X, we try to open any file (using xdg-open, ...) and we do not report an exception if this fails.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start4_FileName_Empty" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start4_FileName_NotFound" executed="False">
                        <reason>
                          <message><![CDATA[On Unix and Mac OS X, we try to open any file (using xdg-open, ...) and we do not report an exception if this fails.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.Start4_FileName_Null" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.StartInfo" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.StartInfo_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.TestEventRaising" executed="True" success="True" time="0.008" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.ProcessTest.TestRedirectedOutputIsAsync" executed="True" success="True" time="2.011" asserts="2">
                        <categories>
                          <category name="MobileNotWorking" />
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="SourceSwitchTest" success="True" time="0.037" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.ConstructorDefault" executed="True" success="True" time="0.005" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.ConstructorNullDefaultValue" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.ConstructorNullName" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.setSwitchToCritical" executed="True" success="True" time="0.006" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.setSwitchToError" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.setSwitchToInfo" executed="True" success="True" time="0.007" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.setSwitchToVerbose" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.setSwitchToWarning" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.ShouldTrace" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Diagnostics.SourceSwitchTest.ShouldTrace2" executed="True" success="True" time="0.001" asserts="10" />
                    </results>
                  </test-suite>
                  <test-suite name="StopwatchTest" success="True" time="4.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.StopwatchTest.TestSimple" executed="True" success="True" time="4.005" asserts="7" />
                    </results>
                  </test-suite>
                  <test-suite name="SwitchesTest" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.BooleanSwitches" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.BooleanSwitchInvalidDefaultValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.BooleanSwitchNullDefaultValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.BooleanSwitchValidDefaultValue" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.GetSupportedAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.NewSwitch" executed="False">
                        <reason>
                          <message><![CDATA[this test depends on 1.x configuration type]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.NullSwitchHasEmptyDisplayNameAndDescription" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.SwitchesTest.TraceSwitches" executed="True" success="True" time="0.001" asserts="32" />
                    </results>
                  </test-suite>
                  <test-suite name="TextWriterTraceListenerTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.TextWriterTraceListenerTest.TestFlush" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.TextWriterTraceListenerTest.TestWrite" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.TextWriterTraceListenerTest.TestWriteLine" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="TraceListenerTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.TraceListenerTest.GetSupportedAttributes" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.TraceListenerTest.TraceEventAndTraceData" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.TraceListenerTest.TraceOptionValues" executed="True" success="True" time="0.003" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="TraceSourceTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.TraceSourceTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.TraceSourceTest.ConstructorNullName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.TraceSourceTest.DefaultValues" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Diagnostics.TraceSourceTest.SetSourceSwitchNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.TraceSourceTest.SwitchLevel" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="TraceTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.TraceTest.AddedTraceListenerProperties" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.TraceTest.Indent" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.Diagnostics.TraceTest.Listeners_Add_Values" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.TraceTest.Tracing" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="XmlWriterTraceListenerTest" success="True" time="0.017" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.Fail1" executed="False">
                        <reason>
                          <message><![CDATA[the test should be rewritten to not compare instance-specific items.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.TraceDataWithCache1" executed="False">
                        <reason>
                          <message><![CDATA[the test should be rewritten to not compare instance-specific items.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.TraceDataWithCache2" executed="False">
                        <reason>
                          <message><![CDATA[the test should be rewritten to not compare instance-specific items.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.TraceEvent1" executed="False">
                        <reason>
                          <message><![CDATA[the test should be rewritten to not compare instance-specific items.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.TraceEvent2" executed="False">
                        <reason>
                          <message><![CDATA[the test should be rewritten to not compare instance-specific items.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.TraceTransfer1" executed="False">
                        <reason>
                          <message><![CDATA[the test should be rewritten to not compare instance-specific items.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.WriteLine1" executed="False">
                        <reason>
                          <message><![CDATA[the test should be rewritten to not compare instance-specific items.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.XmlWriterTraceListenerTest.XPathNavigatorAsData" executed="True" success="True" time="0.009" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="FileStyleUriParserTest" success="True" time="0.002" asserts="1">
                <results>
                  <test-case name="MonoTests.System.FileStyleUriParserTest.Filex" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.FileStyleUriParserTest.SecureFilex" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="FtpStyleUriParserTest" success="True" time="0.001" asserts="1">
                <results>
                  <test-case name="MonoTests.System.FtpStyleUriParserTest.Ftpx" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.FtpStyleUriParserTest.SecureFtpx" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="GenericUriParserTest" success="True" time="0.008" asserts="1">
                <results>
                  <test-case name="MonoTests.System.GenericUriParserTest.AllOptions" executed="True" success="True" time="0.005" asserts="512" />
                  <test-case name="MonoTests.System.GenericUriParserTest.Generic" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.GenericUriParserTest.InvalidOptions" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.GenericUriParserTest.SecureGeneric" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="GopherStyleUriParserTest" success="True" time="0.001" asserts="1">
                <results>
                  <test-case name="MonoTests.System.GopherStyleUriParserTest.Gopherx" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.GopherStyleUriParserTest.SecureGopherx" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="HttpStyleUriParserTest" success="True" time="0.006" asserts="1">
                <results>
                  <test-case name="MonoTests.System.HttpStyleUriParserTest.Httpx" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.HttpStyleUriParserTest.Httpx_Methods" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests.System.HttpStyleUriParserTest.InitializeAndValidate" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.HttpStyleUriParserTest.InitializeAndValidate2" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.HttpStyleUriParserTest.IsWellFormedOriginalString" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.HttpStyleUriParserTest.IsWellFormedOriginalStringNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.HttpStyleUriParserTest.SecureHttpx" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="IO" success="True" time="0.064" asserts="0">
                <results>
                  <test-suite name="Compression" success="True" time="0.046" asserts="0">
                    <results>
                      <test-suite name="DeflateStreamTest" success="True" time="0.028" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.Bug19313" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.Bug28777_DoubleFlush" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.Bug28777_EmptyFlush" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckBufferOverrun" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckClosedFlush" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckClosedRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckCompressDecompress" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckCompressingRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckDecompress" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckEmptyRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckGetCanReadProp" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckGetCanSeekProp" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckGetCanWriteProp" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckGetLengthProp" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckGetPositionProp" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckNet45Overloads" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckNullRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckRangeRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckSeek" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckSetLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.CheckSetLengthProp" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.Constructor_InvalidCompressionMode" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.DisposeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.DeflateStreamTest.JunkAtTheEnd" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="GZipStreamTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckClosedFlush" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckClosedRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckCompressDecompress" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckCompressingRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckDecompress" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckGetCanReadProp" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckGetCanSeekProp" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckGetCanWriteProp" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckGetLengthProp" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckGetPositionProp" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckNet45Overloads" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckNullRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckRangeRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckSeek" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckSetLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.CheckSetLengthProp" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.Constructor_InvalidCompressionMode" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.DisposeOrderTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.Compression.GZipStreamTest.DisposeTest" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="FileSystemWatcherTest" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckCtor1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckCtor2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckCtor3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckCtor4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckCtor5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckDefaults" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckInvalidPath" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileSystemWatcherTest.CheckPathWildcard" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="Ports" success="True" time="0.005" asserts="0">
                    <results>
                      <test-suite name="SerialPortTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.IO.Ports.SerialPortTest.ZeroTimeout" executed="True" success="True" time="0.004" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="LdapStyleUriParserTest" success="True" time="0.002" asserts="1">
                <results>
                  <test-case name="MonoTests.System.LdapStyleUriParserTest.Ldapx" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.LdapStyleUriParserTest.SecureLdapx" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="Net" success="True" time="58.111" asserts="0">
                <results>
                  <test-suite name="Configuration" success="True" time="0.005" asserts="0">
                    <results>
                      <test-suite name="ConnectionManagementSectionTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Configuration.ConnectionManagementSectionTest.GetConfigSection" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="WebRequestModulesSectionTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Configuration.WebRequestModulesSectionTest.GetConfigSection" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="CookieCollectionTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.CookieCollectionTest.Add" executed="True" success="True" time="0.003" asserts="5" />
                      <test-case name="MonoTests.System.Net.CookieCollectionTest.CopyTo" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.CookieCollectionTest.Count" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.CookieCollectionTest.Enumerator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.CookieCollectionTest.Indexer" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CookieContainerTest" success="True" time="0.064" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add_Domain_Invalid" executed="True" success="True" time="0.006" asserts="0" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add_LocalWithPort" executed="True" success="True" time="0.005" asserts="14" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add1" executed="True" success="True" time="0.001" asserts="19" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add1_Domain_Empty" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add2_Cookies_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add3_Cookie_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add3_Uri_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add4_Cookie_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add4_Uri_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add5_Subdomain" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Add6_Insecure" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.bug421827" executed="True" success="True" time="0.003" asserts="7" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Capacity" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Capacity_Value_Invalid" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Constructor1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Constructor2" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Constructor2_Capacity_Invalid" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Constructor3" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Constructor3_Capacity_Invalid" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Constructor3_MaxCookieSize_Invalid" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.Constructor3_PerDomainCapacity_Invalid" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader_Uri_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader1" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader2a" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader2b" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader3" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader4" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader6" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader7a" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookieHeader7b" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookies" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookies_Uri_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookies2a" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookies2b" executed="True" success="True" time="0.001" asserts="36" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.GetCookies2c" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.MaxCookieSize" executed="True" success="True" time="0.003" asserts="9" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.MaxCookieSize_Value_Invalid" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.MoreThanDefaultCookieLimit" executed="True" success="True" time="0.008" asserts="2" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.MoreThanDefaultDomainCookieLimit" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.PerDomainCapacity" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.PerDomainCapacity_Value_Invalid" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SaveAndLoadViaAddUriCookie" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SaveAndLoadViaSetCookies" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SetCookies" executed="True" success="True" time="0.004" asserts="123" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SetCookies_CookieHeader_Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SetCookies_CookieHeader_Invalid_1" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SetCookies_CookieHeader_Invalid_2" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SetCookies_CookieHeader_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SetCookies_DomainMatchesHost" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.SetCookies_Uri_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.TestAdd_Cookie" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.TestAddExpired_Cookie" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Net.CookieContainerTest.TestDefaultLimits" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="CookieParserTest" success="True" time="0.038" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.CookieParserTest.TestDate" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Net.CookieParserTest.TestExpires" executed="True" success="True" time="0.029" asserts="11" />
                      <test-case name="MonoTests.System.Net.CookieParserTest.TestInvalidCookie" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.CookieParserTest.TestLocalCulture" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Net.CookieParserTest.TestMultiple" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.CookieParserTest.TestMultiple2" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Net.CookieParserTest.TestQuotation" executed="True" success="True" time="0.001" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="CookieTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.CookieTest.Constructors" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.CookieTest.Equals" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.CookieTest.Name" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Net.CookieTest.Path" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.CookieTest.Port" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.CookieTest.PublicFields" executed="True" success="True" time="0.000" asserts="17" />
                      <test-case name="MonoTests.System.Net.CookieTest.ToStringTest" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Net.CookieTest.Value" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CredentialCacheTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.CredentialCacheTest.All" executed="True" success="True" time="0.003" asserts="18" />
                    </results>
                  </test-suite>
                  <test-suite name="DnsPermissionAttributeTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.DnsPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Net.DnsPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.DnsPermissionAttributeTest.Default" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.DnsPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DnsPermissionTest" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.Intersect" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.Intersect_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.IsSubset" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.IsSubset_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.PermissionState_None" executed="True" success="True" time="0.005" asserts="5" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.PermissionState_Unrestricted" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.Union" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Net.DnsPermissionTest.Union_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DnsTest" success="True" time="1.839" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.DnsTest.AsyncGetHostByName" executed="True" success="True" time="0.136" asserts="7" />
                      <test-case name="MonoTests.System.Net.DnsTest.AsyncResolve" executed="True" success="True" time="0.462" asserts="7" />
                      <test-case name="MonoTests.System.Net.DnsTest.BeginGetHostAddresses_HostNameOrAddress_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.BeginGetHostAddresses_HostNameOrAddress_UnspecifiedAddress" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.DnsTest.BeginGetHostEntry1_Address_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.BeginGetHostEntry2_HostNameOrAddress_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.BeginGetHostEntry2_HostNameOrAddress_UnspecifiedAddress" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.DnsTest.BeginResolve_HostName_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostAddresses_HostNameOrAddress_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostAddresses_HostNameOrAddress_UnspecifiedAddress" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressIPAddress_Address_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressIPAddress2" executed="True" success="True" time="0.196" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressIPAddress3" executed="True" success="True" time="0.079" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressString_Address_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressString2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressString3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressString4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByAddressString5" executed="True" success="True" time="0.027" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByName" executed="True" success="True" time="0.334" asserts="10" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostByName_HostName_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostEntry_StringEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostEntry1_Address_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostEntry2" executed="True" success="True" time="0.293" asserts="0" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostEntry2_HostNameOrAddress_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostEntry2_HostNameOrAddress_UnspecifiedAddress" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.DnsTest.GetHostName" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Net.DnsTest.Resolve" executed="True" success="True" time="0.290" asserts="12" />
                      <test-case name="MonoTests.System.Net.DnsTest.Resolve_HostName_Null" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="EndPointTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.EndPointTest.AddressFamily" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.EndPointTest.Create" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.EndPointTest.Serialize" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="FileWebRequestTest" success="True" time="0.037" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Async" executed="True" success="True" time="0.010" asserts="18" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.ConnectionGroupName" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.ContentLength" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.ContentLength_Negative" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.ContentType" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Credentials" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Deserialize" executed="True" success="True" time="0.004" asserts="22" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.GetObjectData" executed="True" success="True" time="0.002" asserts="52" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.GetRequestStream_File_Exists" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.GetRequestStream_Method_Invalid" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.GetRequestStream_Method_Valid" executed="True" success="True" time="0.003" asserts="56" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.GetResponse_File_DoesNotExist" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.GetResponse_File_Exists" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Method" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Method_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Method_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.PreAuthenticate" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Proxy" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.RequestUri" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Sync" executed="True" success="True" time="0.002" asserts="17" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Timeout" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.FileWebRequestTest.Timeout_Negative" executed="True" success="True" time="0.001" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="FileWebResponseTest" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.FileWebResponseTest.ContentLength" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Net.FileWebResponseTest.ContentType" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.FileWebResponseTest.GetResponseStream" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Net.FileWebResponseTest.Headers" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Net.FileWebResponseTest.ResponseUri" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FtpWebRequestTest" success="True" time="0.244" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.ContentLength" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.ContentOffset" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.ContentType" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.Credentials" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.DefaultValues" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.DeleteFile1" executed="True" success="True" time="0.013" asserts="1" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.DownloadFile1" executed="True" success="True" time="0.046" asserts="2" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.DownloadFile2" executed="True" success="True" time="0.043" asserts="2" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.ListDirectory1" executed="True" success="True" time="0.044" asserts="1" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.Method" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.PreAuthenticate" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.ReadWriteTimeout" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.RenameTo" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.Timeout" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.UploadFile_WebClient" executed="True" success="True" time="0.045" asserts="1" />
                      <test-case name="MonoTests.System.Net.FtpWebRequestTest.UploadFile1" executed="True" success="True" time="0.043" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpListener2Test" success="True" time="1.481" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpListener2Test.MultiResponses" executed="True" success="True" time="0.554" asserts="10" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.ReceiveCookiesFromClient" executed="True" success="True" time="0.005" asserts="13" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.SendCookiestoClient" executed="True" success="True" time="0.005" asserts="6" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test_MultipleClosesOnOuputStreamAllowed" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test1" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test10" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test11" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test12" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test13" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test14" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test15" executed="True" success="True" time="0.827" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test16" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test17" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test2" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test3" executed="True" success="True" time="0.050" asserts="49" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test4" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test5" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test6" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test7" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test8" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListener2Test.Test9" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpListenerBasicIdentityTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpListenerBasicIdentityTest.Basic1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerBasicIdentityTest.Basic2" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpListenerBasicIdentityTest.Basic3" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpListenerBasicIdentityTest.Basic4" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpListenerBugs" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpListenerBugs.BindToAllInterfaces" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerBugs.BindToSingleInterface" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerBugs.ClosePort" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerBugs.Test_HostInUri" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListenerBugs.Test_MultipleConnections" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerBugs.TestNonChunkedAsync" executed="True" success="True" time="0.002" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpListenerPrefixCollectionTest" success="True" time="0.018" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.AddOne" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.DefaultProperties" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.DifferentPath" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Disposed1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Disposed2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Disposed3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Disposed4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Disposed5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Disposed6" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Disposed7" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.Duplicate" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.EndsWithSlash" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.MultipleSlashes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.NL_AddBadUri" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.NL_Clear" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.NL_DefaultProperties" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.NL_Remove" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.NL_RemoveBadUri" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.NoHostInUrl" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerPrefixCollectionTest.PercentSign" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpListenerRequestTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpListenerRequestTest.HttpBasicAuthScheme" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerRequestTest.HttpMethod" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerRequestTest.HttpRequestUriIsNotDecoded" executed="True" success="True" time="0.003" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpListenerTest" success="True" time="2.096" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpListenerTest.AbortBeforeStart" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.AbortTwice" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.AbortWhileBegin" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.AbortWhileGet" executed="True" success="True" time="1.004" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.BeginGetContext1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.BeginGetContext2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.CloseBeforeStart" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.CloseTwice" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.CloseWhileBegin" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.CloseWhileGet" executed="True" success="True" time="1.002" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.ConnectionReuse" executed="True" success="True" time="0.049" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.DefaultHttpPort" executed="False">
                        <reason>
                          <message><![CDATA[Can not open port 80 skipping test.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.HttpListenerTest.DefaultHttpsPort" executed="False">
                        <reason>
                          <message><![CDATA[Can not open port 443 skipping test.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.HttpListenerTest.DefaultProperties" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.GetContext1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.GetContext2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.MultipleSlashes" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PercentSign" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosed1" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosed2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosed3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosedSet1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosedSet2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosedSet3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosedSet4" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.PropertiesWhenClosedSet5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.Start1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.StartStopDispose" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.StartStopStart" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.Stop1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.TwoListeners_SameAddress" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpListenerTest.TwoListeners_SameURL" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpRequestStreamTest" success="True" time="1.040" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.BeginRead" executed="True" success="True" time="0.056" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.BeginWrite_Request_Aborted" executed="True" success="True" time="0.053" asserts="5" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.CanRead" executed="True" success="True" time="0.052" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.CanSeek" executed="True" success="True" time="0.052" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.CanTimeout" executed="True" success="True" time="0.053" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.CanWrite" executed="True" success="True" time="0.053" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Post_EmptyRequestStream" executed="True" success="True" time="0.074" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Read" executed="True" success="True" time="0.053" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.ReadByte" executed="True" success="True" time="0.053" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.ReadTimeout" executed="True" success="True" time="0.052" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Seek" executed="True" success="True" time="0.053" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Write_Buffer_Null" executed="True" success="True" time="0.053" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Write_Count_Negative" executed="True" success="True" time="0.053" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Write_Count_Overflow" executed="True" success="True" time="0.054" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Write_Offset_Negative" executed="True" success="True" time="0.053" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Write_Offset_Overflow" executed="True" success="True" time="0.053" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.Write_Request_Aborted" executed="True" success="True" time="0.055" asserts="5" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.WriteByte_Request_Aborted" executed="True" success="True" time="0.053" asserts="5" />
                      <test-case name="MonoTests.System.Net.HttpRequestStreamTest.WriteTimeout" executed="True" success="True" time="0.052" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpResponseStreamTest" success="True" time="0.770" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.BeginRead_Buffer_Null" executed="True" success="True" time="0.055" asserts="9" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.BeginWrite" executed="True" success="True" time="0.055" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.CanSeek" executed="True" success="True" time="0.054" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.CanTimeout" executed="True" success="True" time="0.054" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.CanWrite" executed="True" success="True" time="0.054" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.Read" executed="True" success="True" time="0.054" asserts="12" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.Read_Buffer_Null" executed="True" success="True" time="0.058" asserts="9" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.Read_Count_Negative" executed="True" success="True" time="0.054" asserts="9" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.Read_Count_Overflow" executed="True" success="True" time="0.054" asserts="9" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.Read_Offset_Negative" executed="True" success="True" time="0.054" asserts="9" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.Read_Offset_Overflow" executed="True" success="True" time="0.055" asserts="9" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.ReadTimeout" executed="True" success="True" time="0.054" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.Write" executed="True" success="True" time="0.054" asserts="3" />
                      <test-case name="MonoTests.System.Net.HttpResponseStreamTest.WriteTimeout" executed="True" success="True" time="0.054" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpWebRequestElementTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpWebRequestElementTest.DefaultValues" executed="True" success="True" time="0.001" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpWebRequestTest" success="True" time="27.077" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.AddAndRemoveDate" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.AddRange" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.AllowAutoRedirect" executed="True" success="True" time="1.211" asserts="7" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.AllowReadStreamBuffering" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BadServer_ChunkedClose" executed="True" success="True" time="0.006" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetRequestStream" executed="True" success="True" time="0.007" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetRequestStream_Body_NotAllowed" executed="True" success="True" time="0.054" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetRequestStream_NoBuffering" executed="True" success="True" time="0.055" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetRequestStream_Request_Aborted" executed="True" success="True" time="0.054" asserts="5" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetRequestStreamCancelIfNotAllBytesWritten" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetRequestStreamNoClose" executed="True" success="True" time="1.003" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetResponse_Request_Aborted" executed="True" success="True" time="0.054" asserts="5" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetResponse2" executed="True" success="True" time="0.042" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginGetResponseAborts" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginWrite" executed="True" success="True" time="0.020" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.BeginWriteAfterAbort" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.CloseRequestStreamAfterReadingResponse" executed="True" success="True" time="0.453" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.CookieContainerTest" executed="True" success="True" time="0.509" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.EmptyHost" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.EndGetRequestStream_AsyncResult_Null" executed="True" success="True" time="0.053" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.EndGetResponse_AsyncResult_Null" executed="True" success="True" time="0.055" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.GetRequestStream" executed="True" success="True" time="0.053" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.GetRequestStream_Body_NotAllowed" executed="False">
                        <reason>
                          <message><![CDATA[This test asserts that our code violates RFC 2616]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.GetRequestStream_Request_Aborted" executed="True" success="True" time="0.053" asserts="5" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.GetRequestStream2" executed="True" success="True" time="0.013" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.GetRequestStreamNotAllBytesWritten" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.GetRequestStreamTimeout" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.GetResponse_Request_Aborted" executed="True" success="True" time="0.054" asserts="5" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.HostAndPort" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.HostTooLong" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.MethodCase" executed="False">
                        <reason>
                          <message><![CDATA[This test asserts that our code violates RFC 2616]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.Missing_ContentEncoding" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.NoDate" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.NoHost" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.NonStandardVerb" executed="True" success="True" time="0.255" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.NtlmAuthentication" executed="True" success="True" time="0.037" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.NullHost" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.PortAbove" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.PortBelow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.PortRange" executed="True" success="True" time="1.228" asserts="65535" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.PostAnd401" executed="True" success="True" time="1.157" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.PostAndRedirect_CL" executed="True" success="True" time="1.157" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.PostAndRedirect_NoCL" executed="True" success="True" time="1.157" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.PrematureStreamCloseAborts" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.Proxy_Null" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.Read" executed="True" success="True" time="0.038" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.ReadServerAborted" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.ReadTimeout" executed="False">
                        <reason>
                          <message><![CDATA[This does not timeout any more. That's how MS works when reading small responses]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.ReadTimeout2" executed="True" success="True" time="0.104" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.SslClientBlock" executed="False">
                        <reason>
                          <message><![CDATA[Fails on MS.NET]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.TestIPv6Host" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.TestTimeoutPropertyWithServerThatExistsAndRespondsButTooLate" executed="True" success="True" time="9.056" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.TestTimeoutWithEndpointThatDoesntExistThrowsConnectFailureBeforeTimeout" executed="True" success="True" time="9.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.UtcDate" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebRequestTest.Write" executed="True" success="True" time="0.073" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="HttpWebResponseTest" success="True" time="0.872" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.CharacterSet_Disposed" executed="True" success="True" time="0.052" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.Close_Disposed" executed="True" success="True" time="0.052" asserts="0" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.ContentEncoding_Disposed" executed="True" success="True" time="0.053" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.ContentLength_Disposed" executed="True" success="True" time="0.054" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.ContentType_Disposed" executed="True" success="True" time="0.054" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.Cookies_Disposed" executed="True" success="True" time="0.054" asserts="8" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.GetResponseHeader_Disposed" executed="True" success="True" time="0.054" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.GetResponseStream_Disposed" executed="True" success="True" time="0.057" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.Headers_Disposed" executed="True" success="True" time="0.055" asserts="7" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.LastModified_Disposed" executed="True" success="True" time="0.054" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.Method_Disposed" executed="True" success="True" time="0.054" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.ProtocolVersion_Disposed" executed="True" success="True" time="0.055" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.ResponseUri_Disposed" executed="True" success="True" time="0.055" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.Server_Disposed" executed="True" success="True" time="0.052" asserts="4" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.StatusCode_Disposed" executed="True" success="True" time="0.055" asserts="1" />
                      <test-case name="MonoTests.System.Net.HttpWebResponseTest.StatusDescription_Disposed" executed="True" success="True" time="0.055" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="IPAddressTest" success="True" time="0.040" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.IPAddressTest.Address" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.Constructor0_Address_4Byte" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.Constructor0_Address_Invalid" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.Constructor0_Address_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.Constructor1_Address_4Byte" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.Constructor1_Address_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.FromBytes1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.GetAddressBytesV4" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.GetAddressBytesV6" executed="True" success="True" time="0.000" asserts="32" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.IsIPv6LinkLocal" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.IsIPv6Multicast" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.IsIPv6SiteLocal" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.IsIPv6Teredo" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.IsLoopbackV4" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.IsLoopbackV6" executed="False">
                        <reason>
                          <message><![CDATA[IPv6 must be enabled in machine.config]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.IPAddressTest.LoopbackIPv6" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.NetworkHost" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.Parse_IpString_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.ParseOkV4" executed="True" success="True" time="0.001" asserts="23" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.ParseOkV6" executed="True" success="True" time="0.003" asserts="192" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.ParseWrongV4" executed="True" success="True" time="0.001" asserts="63" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.ParseWrongV6" executed="False">
                        <reason>
                          <message><![CDATA[IPv6 must be enabled in machine.config]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Net.IPAddressTest.PublicFields" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.ToStringV4" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.ToStringV6" executed="True" success="True" time="0.001" asserts="96" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.TryParse" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.TryParse_IpString_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.TryParseOkV4" executed="True" success="True" time="0.001" asserts="46" />
                      <test-case name="MonoTests.System.Net.IPAddressTest.TryParseWrongV4" executed="True" success="True" time="0.000" asserts="42" />
                    </results>
                  </test-suite>
                  <test-suite name="IPEndPointTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.IPEndPointTest.Constructors" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.IPEndPointTest.CreateAndSerialize" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.IPEndPointTest.Equals" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.IPEndPointTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.IPEndPointTest.PortProperty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.IPEndPointTest.PublicFields" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.IPEndPointTest.ToStringTest" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="Mail" success="True" time="0.211" asserts="0">
                    <results>
                      <test-suite name="AlternateViewCollectionTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewCollectionTest.AddCount" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewCollectionTest.InitialCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewCollectionTest.RemoveCount" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AlternateViewTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewTest.ArgumentNullException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewTest.ArgumentNullException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewTest.ContentStream" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewTest.ContentType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewTest.ContentType2" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewTest.CreateAlternateViewFromStringEncodingNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.AlternateViewTest.TransferEncodingTest" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="AttachmentCollectionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.AttachmentCollectionTest.AddCount" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentCollectionTest.InitialCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentCollectionTest.RemoveCount" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AttachmentTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.ArgumentNullException" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.ConstructorNullName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.ContentDisposition" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.ContentStream" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.ContentType" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.CreateAttachmentFromStringNullName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.Name" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.NameEncoding" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.AttachmentTest.TransferEncodingTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="LinkedResourceCollectionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.LinkedResourceCollectionTest.AddCount" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.LinkedResourceCollectionTest.InitialCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.LinkedResourceCollectionTest.RemoveCount" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="LinkedResourceTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.LinkedResourceTest.ArgumentNullException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.LinkedResourceTest.ArgumentNullException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.LinkedResourceTest.TransferEncodingTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MailAddressCollectionTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.MailAddressCollectionTest.AddCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressCollectionTest.InitialCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressCollectionTest.RemoveCount" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MailAddressTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Address" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Address_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Address_NoClosingQuote" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Address_NoUser" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Address_NoUserNoHost" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Address_QuoteFirst" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Address_QuoteNotFirst" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Constructor_Address_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Constructor0" executed="True" success="True" time="0.002" asserts="45" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Constructor0_Address_Invalid" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Constructor0_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Constructor1" executed="True" success="True" time="0.001" asserts="30" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.DisplayName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.DisplayName_Precedence" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.EqualsTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.EqualsTest2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.Host" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailAddressTest.User" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MailMessageTest" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.ArgumentNullCtor1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.ArgumentNullCtor2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.ArgumentNullCtor3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.ArgumentNullCtor4" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.Body" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.BodyAndEncoding" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.BodyEncoding" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.From" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.IsBodyHtml" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.Priority" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.Subject" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.SubjectAndEncoding" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.TestRecipients" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.MailMessageTest.To" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="SmtpClientTest" success="True" time="0.117" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Credentials_Default" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Deliver" executed="True" success="True" time="0.043" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Deliver_Envelope" executed="True" success="True" time="0.041" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.DeliveryMethod" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.EnableSsl" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Host" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Host_Value_Empty" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Host_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.PickupDirectoryLocation" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Port" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Port_Value_Invalid" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_Message_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_Network_Host_Null" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_Network_Host_Whitespace" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_SpecifiedPickupDirectory" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_SpecifiedPickupDirectory_PickupDirectoryLocation_DirectoryNotFound" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_SpecifiedPickupDirectory_PickupDirectoryLocation_Empty" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_SpecifiedPickupDirectory_PickupDirectoryLocation_IllegalChars" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_SpecifiedPickupDirectory_PickupDirectoryLocation_NotAbsolute" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Send_SpecifiedPickupDirectory_PickupDirectoryLocation_Null" executed="True" success="True" time="0.004" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Timeout" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.Timeout_Value_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpClientTest.UseDefaultCredentials_Default" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SmtpExceptionTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.Constructor1" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.Constructor2" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.Constructor4_SerializationInfo_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.Constructor5" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.Constructor6" executed="True" success="True" time="0.001" asserts="22" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.GetObjectData" executed="True" success="True" time="0.002" asserts="55" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpExceptionTest.GetObjectData_SerializationInfo_Null" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="SmtpPermissionAttributeTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.Access" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.Access_Invalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.Action" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.CreatePermission_Invalid" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.Default" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SmtpPermissionTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.AddPermission" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.AddPermission_Invalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.AddPermission_Unrestricted" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Ctor_Boolean_False" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Ctor_Boolean_True" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Ctor_SmtpAccess_Connect" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Ctor_SmtpAccess_ConnectToUnrestrictedPort" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Ctor_SmtpAccess_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Ctor_SmtpAccess_None" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Intersect" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Intersect_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Intersect_SmtpAccess" executed="True" success="True" time="0.001" asserts="21" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.IsSubset" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.IsSubset_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.IsSubset_SmtpAccess" executed="True" success="True" time="0.000" asserts="21" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.PermissionState_None" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.PermissionState_Unrestricted" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Union" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Union_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mail.SmtpPermissionTest.Union_SmtpAccess" executed="True" success="True" time="0.001" asserts="21" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Mime" success="True" time="0.020" asserts="0">
                    <results>
                      <test-suite name="ContentDispositionTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.ArgumentNullException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.DispositionType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.DispositionTypeEmpty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.DispositionTypeNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.Equals" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.EqualsHashCode" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.FileName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.FormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.IsInline" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.NoFormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.Parameters" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.Size" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.ToStringTest" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.ToStringTest2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.ToStringTest3" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentDispositionTest.ToStringTest4" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ContentTypeTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ArbitraryParameter" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ArgumentException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ArgumentNullException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.Boundary" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.CharSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.EncodedChars" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.Equals" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.FormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.MediaType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.MediaTypeEmptyException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.MediaTypeFormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.MediaTypeNullException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.Parameters" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ToStringTest2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ToStringTest3" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ToStringTest4" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ToStringTest5" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Mime.ContentTypeTest.ToStringTest6" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="NetworkCredentialTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.NetworkCredentialTest.Constructor_0" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.Net.NetworkCredentialTest.Constructor_2" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.Net.NetworkCredentialTest.Constructor_3" executed="True" success="True" time="0.000" asserts="12" />
                    </results>
                  </test-suite>
                  <test-suite name="NetworkInformation" success="True" time="6.047" asserts="0">
                    <results>
                      <test-suite name="IPInterfacePropertiesTest" success="True" time="0.014" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.NetworkInformation.IPInterfacePropertiesTest.AtLeastOneDnsAddress" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.IPInterfacePropertiesTest.AtLeastOneGatewayAddress" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.IPInterfacePropertiesTest.AtLeastOneUnicastAddress" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.IPInterfacePropertiesTest.DnsEnabled" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="NetworkInterfaceTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.AtLeastOneInterface" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.FirstInterfaceId" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.FirstInterfaceName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.FirstInterfaceOperationalStatus" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.FirstInterfaceSpeed" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.FirstInterfaceType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.IsNetworkAvailable" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.NetworkInterfaceTest.LoopbackInterfaceIndex" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PhysicalAddressTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.CreateNormal" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.CreateWithLarger" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.CreateWithSmaller" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.EqualsNormal" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.EqualsNot" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.GetHashCodeEqual" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.GetHashCodeNotEqual" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseEmpty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseWithDash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseWithDashToFewChars" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseWithDashToManyChars" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseWithoutDash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseWithoutDashToFewChars" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ParseWithoutDashToManyChars" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PhysicalAddressTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PingTest" success="True" time="6.014" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.NetworkInformation.PingTest.PingFail" executed="True" success="True" time="6.009" asserts="1" />
                          <test-case name="MonoTests.System.Net.NetworkInformation.PingTest.PingSuccess" executed="True" success="True" time="0.005" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Security" success="True" time="5.063" asserts="0">
                    <results>
                      <test-suite name="SslStreamTest" success="True" time="5.063" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Security.SslStreamTest.AuthenticateClientAndServer_ClientSendsNoData" executed="True" success="True" time="0.455" asserts="2" />
                          <test-case name="MonoTests.System.Net.Security.SslStreamTest.CipherSuitesCallbacks" executed="True" success="True" time="0.181" asserts="2" />
                          <test-case name="MonoTests.System.Net.Security.SslStreamTest.ClientCipherSuitesCallback" executed="True" success="True" time="0.171" asserts="2" />
                          <test-case name="MonoTests.System.Net.Security.SslStreamTest.MismatchedCipherSuites" executed="True" success="True" time="4.027" asserts="2" />
                          <test-case name="MonoTests.System.Net.Security.SslStreamTest.ServerCipherSuitesCallback" executed="True" success="True" time="0.227" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ServicePointManagerTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.ServicePointManagerTest.FindServicePoint" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="ServicePointTest" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.ServicePointTest.CloseConnectionGroupConcurency" executed="True" success="True" time="0.021" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="SocketPermissionAttributeTest" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Access" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Access_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Access_Dual_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Access_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Access_Null_CreatePermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Host" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Host_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Host_Dual_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Host_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Host_Null_CreatePermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Port" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Port_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Port_Dual_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Port_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Port_Null_CreatePermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Transport" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Transport_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Transport_Dual_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Transport_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Transport_Null_CreatePermission" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SocketPermissionTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.SocketPermissionTest.Intersect" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Net.SocketPermissionTest.IsSubsetOf2" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Net.SocketPermissionTest.Union" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.SocketPermissionTest.Xml" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Sockets" success="True" time="6.756" asserts="0">
                    <results>
                      <test-suite name="IPv6MulticastOptionTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.Constructor1" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.Constructor1_Group_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.Constructor2" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.Constructor2_Group_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.Constructor2_Ifindex_OutOfRange" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.Group" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.Group_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.InterfaceIndex" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.IPv6MulticastOptionTest.InterfaceIndex_Value_OutOfRange" executed="True" success="True" time="0.000" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="MulticastOptionTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor1" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor1_Group_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor2" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor2_Group_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor2_Mcint_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor3_Group_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Constructor3_InterfaceIndex_OutOfRange" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.Group" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.InterfaceIndex" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.InterfaceIndex_Value_OutOfRange" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="MonoTests.System.Net.Sockets.MulticastOptionTest.LocalAddress" executed="True" success="True" time="0.001" asserts="12" />
                        </results>
                      </test-suite>
                      <test-suite name="NetworkStreamTest" success="True" time="1.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.NetworkStreamTest.NetworkStreamConnection" executed="True" success="True" time="0.014" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.NetworkStreamTest.ReadTimeout" executed="True" success="True" time="0.998" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SocketAsyncEventArgsTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.Defaults" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.OnCompleted_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_BufferList" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_BufferList_ByteArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_BufferList_NullByteArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_ByteArray" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_ByteArray_BufferList" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_ByteArray_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_ByteArray_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_ByteArray_StartNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_ByteArray_StartOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_Null_CountNegative" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_Null_CountOverflow" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_Null_StartNegative" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_Null_StartOverflow" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_NullByteArray_BufferList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_StartNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncEventArgsTest.SetBuffer_StartOverflow" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SocketAsyncTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.SocketAsyncTest.SendAsync" executed="True" success="True" time="0.002" asserts="0">
                            <categories>
                              <category name="Test" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="SocketTest" success="True" time="3.392" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.AcceptBlockingStatus" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAccept" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptData" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptDataClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptNotBound" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptNotListening" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptSocket" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptSocketAccClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptSocketBound" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptSocketClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginAcceptSocketUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectAddressPort" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectAddressPortClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectAddressPortListen" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectAddressPortNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectHostPortClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectHostPortListen" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectHostPortNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectMultiple" executed="True" success="True" time="0.002" asserts="4">
                            <categories>
                              <category name="NotOnMac" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectMultiple2" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectMultipleClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectMultipleListen" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginConnectMultipleNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginDisconnect" executed="True" success="True" time="0.001" asserts="3">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginReceiveGeneric" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginReceiveGenericSocketError" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginReceiveSocketError" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginSendGeneric" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginSendGenericSocketError" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginSendNotConnected" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BeginSendSocketError" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.BindTwice" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Close" executed="True" success="True" time="3.001" asserts="2" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.CloseWhileReceiving" executed="True" success="True" time="0.252" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Connect1_RemoteEP_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectAddressPort" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectAddressPortClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectAddressPortListen" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectAddressPortNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectedProperty" executed="True" success="True" time="0.001" asserts="2">
                            <categories>
                              <category name="NotOnMac" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectFailAsync" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectHostPortClosed" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectHostPortListen" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectHostPortNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectIPAddressAny" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectMultiple" executed="True" success="True" time="0.000" asserts="3">
                            <categories>
                              <category name="NotOnMac" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectMultiple2" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectMultipleClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectMultipleListen" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ConnectMultipleNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disconnect" executed="True" success="True" time="0.000" asserts="2">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed15" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed16" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed17" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed18" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed19" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed20" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed21" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed22" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed23" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed6" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Disposed7" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.DontFragmentClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.DontFragmentDefaultTcp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.DontFragmentDefaultUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.DuplicateAndClose" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.EnableBroadcastChangeTcp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.EnableBroadcastChangeUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.EnableBroadcastClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.EnableBroadcastDefaultTcp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.EnableBroadcastDefaultUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ExclusiveAddressUseClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.GetSocketOption1_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.GetSocketOption2_OptionValue_Null" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.GetSocketOption2_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.GetSocketOption3_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.IncompatibleAddress" executed="False">
                            <reason>
                              <message><![CDATA[Bug #75158]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.IOControl" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.IsBoundClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.IsBoundTcp" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.IsBoundUdp" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ListenNotBound" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.MulticastLoopbackChangeTcp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.MulticastLoopbackChangeUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.MulticastLoopbackClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.MulticastLoopbackDefaultTcp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.MulticastLoopbackDefaultUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.NoDelayChangeTcp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.NoDelayChangeUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.NoDelayClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.NoDelayDefaultTcp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.NoDelayDefaultUdp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive1_Buffer_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive1_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive2_Buffer_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive2_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive3_Buffer_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive3_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive4_Buffer_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive4_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive5_Buffer_Null" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive5_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive6_Buffers_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive6_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive7_Buffers_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive7_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive8_Buffers_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Receive8_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveAsync_ClosedSocket" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveAsync_Default" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveAsync_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveAsync_NullBuffer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveBufferSizeChange" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveBufferSizeClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom1_Buffer_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom1_RemoteEP_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom1_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom2_Buffer_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom2_RemoteEP_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom2_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom3_Buffer_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom3_RemoteEP_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom3_Size_OutOfRange" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom3_Socket_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom4_Buffer_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom4_Offset_OutOfRange" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom4_RemoteEP_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom4_Size_OutOfRange" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveFrom4_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveGeneric" executed="True" success="True" time="0.002" asserts="234" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveRemoteClosed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveTimeoutChange" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveTimeoutClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.ReceiveTimeoutDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SelectEmpty" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendAsync_ClosedSocket" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendAsync_Default" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendAsync_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendAsync_NullBuffer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendAsyncFile" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendBufferSizeChange" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendBufferSizeClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendGeneric" executed="True" success="True" time="0.002" asserts="234" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendTimeoutChange" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendTimeoutClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SendTimeoutDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption_MulticastInterfaceIndex_Any" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption_MulticastInterfaceIndex_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption_MulticastInterfaceIndex_Loopback" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption1_DontLinger" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption1_DontLinger_Null" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption1_Linger_Null" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption1_Socket_Close" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption2_DontLinger" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption2_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_AddMembershipIPv4_IPv6MulticastOption" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_AddMembershipIPv4_MulticastOption" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_AddMembershipIPv6_IPv6MulticastOption" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_AddMembershipIPv6_MulticastOption" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_DontLinger_Boolean" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_DontLinger_Int32" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_DontLinger_LingerOption" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_DropMembershipIPv4_IPv6MulticastOption" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_DropMembershipIPv4_MulticastOption" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_DropMembershipIPv6_IPv6MulticastOption" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_DropMembershipIPv6_MulticastOption" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_Linger_Boolean" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_Linger_Int32" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_Linger_LingerOption" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_OptionValue_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOption3_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SetSocketOptionBoolean" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.Shutdown_NoConnect" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SocketErrorTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.SocketInformationCtor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.TestSelect1" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.TtlChange" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.TtlChangeOverflow" executed="True" success="True" time="0.000" asserts="1">
                            <categories>
                              <category name="NotOnMac" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.TtlClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.UdpDoubleBind" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.UseOnlyOverlappedIOChange" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.UseOnlyOverlappedIOClosed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.SocketTest.UseOnlyOverlappedIODefault" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TcpClientTest" success="True" time="0.108" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.TcpClientTest.CloseTest" executed="True" success="True" time="0.103" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpClientTest.ConnectMultiAny" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpClientTest.ConnectMultiNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpClientTest.ConnectMultiRefused" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpClientTest.TcpClient" executed="True" success="True" time="0.001" asserts="1025" />
                        </results>
                      </test-suite>
                      <test-suite name="TcpListenerTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.CtorInt1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.CtorIPAddressInt1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.CtorIPAddressInt2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.CtorIPEndPoint" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.PostStartStatus" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.PreStartStatus" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.StartListenMoreThan5" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.TcpListenerTest.TcpListener" executed="True" success="True" time="0.002" asserts="1026" />
                        </results>
                      </test-suite>
                      <test-suite name="UdpClientTest" success="True" time="2.171" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Available" executed="True" success="True" time="0.103" asserts="2" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.BeginReceive" executed="True" success="True" time="0.004" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.BeginSend" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.BeginSendNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.CloseInReceive" executed="True" success="True" time="2.003" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor1" executed="True" success="True" time="0.002" asserts="12" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor2" executed="True" success="True" time="0.002" asserts="22" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor2_Family_Invalid" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor3" executed="True" success="True" time="0.002" asserts="27" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor3_Port_OutOfRange" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor4" executed="True" success="True" time="0.002" asserts="15" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor4_LocalEP_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor5" executed="True" success="True" time="0.003" asserts="25" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor5_Family_Invalid" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor5_Port_OutOfRange" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor6" executed="True" success="True" time="0.003" asserts="24" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor6_HostName_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.Constructor6_Port_OutOfRange" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.EnableBroadcastDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup1_IPv4" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup1_IPv6" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup1_MulticastAddr_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup1_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup2_IPv4" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup2_IPv6" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup2_MulticastAddr_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup2_Socket_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup3_IPv4" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup3_IPv6" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup3_MulticastAddr_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup3_Socket_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup4_IPv4" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup4_IPv6" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup4_LocalAddress_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup4_MulticastAddr_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroup4_Socket_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.JoinMulticastGroupWithLocal" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.MulticastLoopbackDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Net.Sockets.UdpClientTest.UdpClientBroadcastTest" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="WebClientTest" success="True" time="0.953" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.WebClientTest.DefaultProxy" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadData1_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadData1_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadData2_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadData2_Address_SchemeNotSupported" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadFile1_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadFile1_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadFile1_FileName_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadFile2_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadFile2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadFile2_FileName_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadString1_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadString1_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadString2_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.DownloadString2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.Encoding_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Net.WebClientTest.EncodingTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebClientTest.GetWebRequestOverriding" executed="True" success="True" time="0.170" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenRead1_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenRead1_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenRead2_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenRead2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite1_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite1_Address_SchemeNotSupported" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite2_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite3_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite3_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite4_Address_Null" executed="True" success="True" time="0.006" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.OpenWrite4_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData1_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData1_Address_SchemeNotSupported" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData1_Data_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData2_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData2_Data_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData3_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData3_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData3_Data_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData4_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData4_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadData4_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadDataAsyncCancelEvent" executed="True" success="True" time="0.058" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile1_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile1_Address_SchemeNotSupported" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile1_FileName_NotFound" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile1_FileName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile2_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile2_FileName_NotFound" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile2_FileName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile3_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile3_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile3_FileName_NotFound" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile3_FileName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile4_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile4_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile4_FileName_NotFound" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFile4_FileName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFileAsyncCancelEvent" executed="True" success="True" time="0.058" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadFileAsyncContentType" executed="True" success="True" time="0.004" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString1_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString1_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString1_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString2_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString2_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString3_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString3_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString3_Data_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString4_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString4_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadString4_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadStringAsyncCancelEvent" executed="True" success="True" time="0.056" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues1" executed="True" success="True" time="0.459" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues1_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues1_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues1_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues2_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues2_Address_SchemeNotSupported" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues2_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues3_Address_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues3_Address_SchemeNotSupported" executed="True" success="True" time="0.003" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues3_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues4_Address_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues4_Address_SchemeNotSupported" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValues4_Data_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebClientTest.UploadValuesAsyncCancelEvent" executed="True" success="True" time="0.055" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="WebClientTestAsync" success="True" time="0.017" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.WebClientTestAsync.DownloadData" executed="True" success="True" time="0.016" asserts="5">
                        <categories>
                          <category name="Async" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="WebHeaderCollectionTest" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.Add" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.AddRequestHeader" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.AddRestricted" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.AddRestrictedDisabled" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.Deserialize" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.GetObjectData" executed="True" success="True" time="0.002" asserts="43" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.GetValues" executed="True" success="True" time="0.001" asserts="17" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.Indexers" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted_2_0_RequestRequest" executed="True" success="True" time="0.000" asserts="33" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted_2_0_RequestResponse" executed="True" success="True" time="0.000" asserts="33" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted_2_0_ResponseRequest" executed="True" success="True" time="0.000" asserts="30" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted_2_0_ResponseResponse" executed="True" success="True" time="0.000" asserts="30" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted_InvalidChars_1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted_InvalidChars_Request_2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.IsRestricted_InvalidChars_Response_2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.RemoveRestricted" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.Serialize" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.Set" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebHeaderCollectionTest.ToStringTest" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="WebPermissionAttributeTest" success="True" time="0.020" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Accept" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Accept_AcceptPattern" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Accept_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Accept_Dual_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Accept_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.AcceptPattern" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.AcceptPattern_Accept" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.AcceptPattern_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.AcceptPattern_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Connect" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Connect_ConnectPattern" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Connect_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Connect_Dual_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Connect_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.ConnectPattern" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.ConnectPattern_Accept" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.ConnectPattern_Dual" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.ConnectPattern_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.CreatePermission_InvalidRegex" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Default" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Net.WebPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="WebProxyTest" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.WebProxyTest.BypassArrayList" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebProxyTest.BypassList" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Net.WebProxyTest.Constructors" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Net.WebProxyTest.GetObjectData" executed="True" success="True" time="0.001" asserts="23" />
                      <test-case name="MonoTests.System.Net.WebProxyTest.GetProxy" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebProxyTest.IsByPassed" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Net.WebProxyTest.IsByPassed_Address_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Net.WebProxyTest.IsByPassed_Host_Null" executed="True" success="True" time="0.001" asserts="15" />
                    </results>
                  </test-suite>
                  <test-suite name="WebRequestTest" success="True" time="0.053" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.WebRequestTest.Abort" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.All" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.BeginGetRequestStream" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.BeginGetResponse" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.ConnectionGroupName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.ContentLength" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.ContentType" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.Create_RequestUriString_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.CreateDefault_RequestUri_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.Credentials" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.DefaultWebProxy" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.EndGetRequestStream" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.EndGetResponse" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.GetRequestStream" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.GetResponse" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.Headers" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.Method" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.PreAuthenticate" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.Proxy" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.RegisterPrefix_Creator_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.RegisterPrefix_Prefix_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.RequestUri" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.SerializationConstructor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.TestFailedConnection" executed="True" success="True" time="0.003" asserts="4" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.TestFailedResolution" executed="True" success="True" time="0.035" asserts="3" />
                      <test-case name="MonoTests.System.Net.WebRequestTest.Timeout" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="WebSockets" success="True" time="3.064" asserts="0">
                    <results>
                      <test-suite name="ClientWebSocketTest" success="True" time="3.063" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.CloseAsyncTest" executed="True" success="True" time="0.436" asserts="4" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.CloseOutputAsyncTest" executed="True" success="True" time="0.366" asserts="8" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.EchoTest" executed="True" success="True" time="0.507" asserts="9" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.ReceiveAsyncArgTest_NoArray" executed="True" success="True" time="0.368" asserts="1" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.ReceiveAsyncArgTest_NotConnected" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.ReceiveAsyncWrongState_Closed" executed="True" success="True" time="0.363" asserts="4" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.SendAsyncArgTest_NoArray" executed="True" success="True" time="0.361" asserts="1" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.SendAsyncArgTest_NotConnected" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.SendAsyncWrongState_Closed" executed="True" success="True" time="0.365" asserts="4" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.SendAsyncWrongState_CloseSent" executed="True" success="True" time="0.260" asserts="4" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.ServerHandshakeReturnCrapStatusCodeTest" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.ServerHandshakeReturnWrongConnectionHeader" executed="True" success="True" time="0.007" asserts="2" />
                          <test-case name="MonoTests.System.Net.WebSockets.ClientWebSocketTest.ServerHandshakeReturnWrongUpgradeHeader" executed="True" success="True" time="0.004" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="WebUtilityTest" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Net.WebUtilityTest.Decode" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Net.WebUtilityTest.EncodeEscapedCharacters" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Net.WebUtilityTest.EntityEncoding" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebUtilityTest.HtmlEncode_LtGt" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebUtilityTest.HtmlEncode_XSS" executed="True" success="True" time="0.011" asserts="3">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Net.WebUtilityTest.LooksLikeEntity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebUtilityTest.RoundTrip" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Net.WebUtilityTest.UrlEncoding" executed="True" success="True" time="0.004" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="NetPipeStyleUriParserTest" success="True" time="0.001" asserts="1">
                <results>
                  <test-case name="MonoTests.System.NetPipeStyleUriParserTest.NetPipeX" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NetPipeStyleUriParserTest.SecureNetPipeX" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="NetTcpStyleUriParserTest" success="True" time="0.001" asserts="1">
                <results>
                  <test-case name="MonoTests.System.NetTcpStyleUriParserTest.NetTcpX" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NetTcpStyleUriParserTest.SecureNetTcpX" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="NewsStyleUriParserTest" success="True" time="0.001" asserts="1">
                <results>
                  <test-case name="MonoTests.System.NewsStyleUriParserTest.NewsX" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NewsStyleUriParserTest.SecureNewsX" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="Runtime" success="True" time="0.012" asserts="0">
                <results>
                  <test-suite name="Versioning" success="True" time="0.011" asserts="0">
                    <results>
                      <test-suite name="FrameworkNameTest" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Versioning.FrameworkNameTest.Constructor_String" executed="True" success="True" time="0.005" asserts="56" />
                          <test-case name="MonoTests.System.Runtime.Versioning.FrameworkNameTest.Constructor_String_Version" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Runtime.Versioning.FrameworkNameTest.Constructor_String_Version_String" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Runtime.Versioning.FrameworkNameTest.EqualityOperator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.Versioning.FrameworkNameTest.InequalityOperator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.Versioning.FrameworkNameTest.ToStringTest" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Security" success="False" time="9.375" asserts="0">
                <results>
                  <test-suite name="AccessControl" success="True" time="0.002" asserts="0">
                    <results>
                      <test-suite name="SemaphoreSecurityTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.SemaphoreSecurityTest.PermissionsActuallyWork" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Cryptography" success="False" time="9.214" asserts="0">
                    <results>
                      <test-suite name="AsnEncodedDataTest" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Build_NetscapeCertTypeExtension" executed="True" success="True" time="0.001" asserts="5">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Build_SubjectAltNameExtension" executed="True" success="True" time="0.000" asserts="5">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Build_X509EnhancedKeyUsageExtension" executed="True" success="True" time="0.001" asserts="6">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_Asn" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_AsnNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_ByteArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_OidData" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_OidDataNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_OidNullData" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_StringData" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_StringDataNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Constructor_StringNullData" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.CopyFrom" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.CopyFrom_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Format" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.FormatMultiline" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Oid" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.Oid_CreatedNull" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.RawData" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.AsnEncodedDataTest.RawData_CanModify" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="OidCollectionTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.OidCollectionTest.Add" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidCollectionTest.AddNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidCollectionTest.Constructor" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidCollectionTest.CopyToOid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidCollectionTest.CopyToOidNull" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="OidEnumeratorTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.OidEnumeratorTest.Current" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidEnumeratorTest.Current_AfterLastElement" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidEnumeratorTest.Current_BeforeFirstElement" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidEnumeratorTest.MoveNext" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidEnumeratorTest.Reset" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="OidTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorInvalidString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorNullString" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorOid" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorOidNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorStringNullString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorStringString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorStringStringNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ConstructorValidString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.FriendlyName" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.FriendlyNameNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.Value" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.ValueNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.OidTest.WellKnownOid" executed="True" success="True" time="0.001" asserts="20" />
                        </results>
                      </test-suite>
                      <test-suite name="X509Certificates" success="False" time="9.177" asserts="0">
                        <results>
                          <test-suite name="Pkits_4_01_SignatureVerification" success="False" time="0.006" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_01_SignatureVerification.T1_ValidSignature" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_01_SignatureVerification.T2_InvalidCASignature" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_01_SignatureVerification.T3_InvalidEESignature" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_01_SignatureVerification.T4_ValidDSASignatures" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_01_SignatureVerification.T5_ValidDSAParameterInheritance" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_01_SignatureVerification.T6_InvalidDSASignatures" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="Pkits_4_02_ValidityPeriod" success="False" time="0.003" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T1_InvalidCAnotBeforeDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T2_InvalidEEnotBeforeDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T3_ValidPre2000UTCnotBeforeDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T4_ValidGeneralizedTimeNotBeforeDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T5_InvalidCAnotAfterDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T6_InvalidEEnotAfterDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T7_InvalidPre2000UTCnotAfterDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_02_ValidityPeriod.T8_ValidGeneralizedTimeNotAfterDate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="Pkits_4_03_VerifyingNameChaining" success="False" time="0.005" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T01_InvalidNameChainingEE" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T02_InvalidNameChainingOrder" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T03_ValidNameChainingWhitespace" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T04_ValidNameChainingWhitespace" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T05_ValidNameChainingCapitalization" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T06_ValidNameChainingUIDs" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T07_ValidRFC3280MandatoryAttributeTypes" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T08_ValidRFC3280OptionalAttributeTypes" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T09_ValidUTF8StringEncodedNames" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T10_ValidRolloverFromPrintableStringToUTF8String" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_03_VerifyingNameChaining.T11_ValidUTF8StringCaseInsensitiveMatch" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="Pkits_4_04_BasicCertificateRevocationTests" success="False" time="0.011" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T01_MissingCRL" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T02_InvalidRevokedCA" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T03_InvalidRevokedEE" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T04_InvalidBadCrlSignature" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T05_InvalidBadCrlIssuerName" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T06_InvalidWrongCrl" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T07_ValidTwoCrls" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T08_InvalidUnknownCrlEntryExtension" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T09_InvalidUnknownCrlExtension" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T10_InvalidUnknownCrlExtension" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T11_InvalidOldCrlNextUpdate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T12_InvalidPre2000CrlNextUpdate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T13_ValidGeneralizedTimeCrlNextUpdate" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T14_ValidNegativeSerialNumber" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T15_InvalidNegativeSerialNumber" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T16_ValidLongSerialNumber" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T17_ValidLongSerialNumber" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T18_InvalidLongSerialNumber" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T19_ValidSeparateCertificateAndCrlKeys" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T20_InvalidSeparateCertificateAndCrlKeys" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_04_BasicCertificateRevocationTests.T21_InvalidSeparateCertificateAndCrlKeys" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="Pkits_4_05_VerifyingPathWithSelfIssuedCertificates" success="False" time="0.003" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_05_VerifyingPathWithSelfIssuedCertificates.T1_ValidBasicSelfIssuedOldWithNew" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_05_VerifyingPathWithSelfIssuedCertificates.T2_InvalidBasicSelfIssuedOldWithNew" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_05_VerifyingPathWithSelfIssuedCertificates.T3_ValidBasicSelfIssuedNewWithOld" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_05_VerifyingPathWithSelfIssuedCertificates.T8_InvalidBasicSelfIssuedCRLSigningKey" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="Pkits_4_06_VerifyingBasicConstraints" success="False" time="0.008" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T01_InvalidMissingBasicConstaints" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T02_InvalidCAFalse" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T03_InvalidCAFalse" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T04_ValidBasicConstraintsNotCritical" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T05_InvalidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T06_InvalidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T07_ValidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T08_ValidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T09_InvalidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T10_InvalidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T11_InvalidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T12_InvalidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T13_ValidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T14_ValidPathLenConstraint" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T15_ValidSelfIssuedPathLenConstraint" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T16_InvalidSelfIssuedPathLenConstraint" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_06_VerifyingBasicConstraints.T17_ValidSelfIssuedPathLenConstraint" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="Pkits_4_07_KeyUsage" success="False" time="0.003" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_07_KeyUsage.T1_InvalidKeyUsageCriticalKeyCertSignFalse" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_07_KeyUsage.T2_InvalidKeyUsageNotCriticalKeyCertSignFalse" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_07_KeyUsage.T3_ValidKeyUsageNotCritical" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_07_KeyUsage.T4_InvalidKeyUsageCriticalCRLSignFalse" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_07_KeyUsage.T5_InvalidKeyUsageNotCriticalCRLSignFalse" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="Pkits_4_08_CertificatePolicies" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_09_RequireExplicitPolicy" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_10_PolicyMapping" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_11_InhibitPolicyMapping" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_12_InhibitAnyPolicy" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_13_NameConstraints" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_14_DistributionPoints" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_15_DeltaCRL" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results />
                          </test-suite>
                          <test-suite name="Pkits_4_16_PrivateCertificateExtensions" success="False" time="0.001" asserts="0">
                            <categories>
                              <category name="PKITS" />
                            </categories>
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_16_PrivateCertificateExtensions.T1_ValidUnknownNotCriticalCertificateExtension" executed="False">
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.Pkits_4_16_PrivateCertificateExtensions.T2_InvalidUnknownCriticalCertificateExtension" executed="False">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                                <reason>
                                  <message><![CDATA[PKITS tests data not found under '/home/alexander/dev/mono/mcs/class/System/Test/System.Security.Cryptography.X509Certificates/pkits/certs'.]]></message>
                                </reason>
                              </test-case>
                            </results>
                          </test-suite>
                          <test-suite name="PublicKeyTest" success="True" time="0.029" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_EmptyParameters" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_EmptyParameters_Key" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_FromCertificate" executed="True" success="True" time="0.002" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_FromScratch" executed="True" success="True" time="0.001" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_UnknownOid" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_UnknownOid_Key" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_WeirdParameters" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Dsa_WeirdParameters_Key" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_NullKeyValue" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_NullOid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_NullParameters" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Rsa_EmptyParameters" executed="True" success="True" time="0.001" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Rsa_FromCertificate" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Rsa_FromScratch" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Rsa_UnknownOid" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Rsa_UnknownOid_Key" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_Rsa_WeirdParameters" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_RsaEmpty" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_RsaEmpty_Key" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_UnknownEmpty" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Constructor_UnknownEmpty_Key" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.PublicKeyTest.Rsa_PasswordProtectedPkcs12" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="X500DistinguishedNameTest" success="True" time="0.020" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_AsnEncodedData" executed="True" success="True" time="0.002" asserts="15" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_AsnEncodedData_Empty" executed="True" success="True" time="0.000" asserts="15" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_AsnEncodedData_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_ByteArray" executed="True" success="True" time="0.000" asserts="17" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_ByteArray_Empty" executed="True" success="True" time="0.000" asserts="17" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_ByteArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String" executed="True" success="True" time="0.002" asserts="17" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String_Empty" executed="True" success="True" time="0.000" asserts="15" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String_Empty_Flags" executed="True" success="True" time="0.000" asserts="15" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String_Empty_Flags_Bad" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String_Flags_None" executed="True" success="True" time="0.001" asserts="11" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String_Flags_Reversed" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_String_Null_Flags" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_X500DistinguishedName" executed="True" success="True" time="0.000" asserts="17" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Constructor_X500DistinguishedName_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Decode_BadFlag" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.Decode_Separators" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.RFC3280MandatoryAttributeTypes" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.RFC3280OptionalAttributeTypes" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X500DistinguishedNameTest.T61String" executed="True" success="True" time="0.001" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="X509BasicConstraintsExtensionTest" success="True" time="0.017" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.Constructor_FalseFalseNegative" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.Constructor_FalseTrueNegative" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.Constructor_FalseTruePositive" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.Constructor_TrueFalseNegative" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.Constructor_TrueTrueMaxInt" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.Constructor_TrueTrueZero" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorAsnEncodedData" executed="True" success="True" time="0.001" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorAsnEncodedData_BadAsn" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorAsnEncodedData_BadAsnLength" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorAsnEncodedData_BadAsnTag" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorAsnEncodedData_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorAsnEncodedData_SmallestValid" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorEmpty_CertificateAuthority" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorEmpty_HasPathLengthConstraint" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.ConstructorEmpty_PathLengthConstraint" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.CopyFrom_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.CopyFrom_Self" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.CreateViaCryptoConfig" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.WrongAsnEncodedData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.WrongExtension_X509Extension" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.WrongExtension_X509Extension_CertificateAuthority" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtensionTest.WrongExtension_X509KeyUsageExtension" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509Cert20Test" success="True" time="0.097" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Base64_AsByteArray_Properties" executed="True" success="True" time="0.003" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Base64_AsFile_Properties" executed="True" success="True" time="0.003" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Base64_AsStringData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Ctor_Serialization" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Ctor_Serialization_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty" executed="True" success="True" time="0.001" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_Export" executed="True" success="True" time="0.000" asserts="0">
                                <categories>
                                  <category name="NotDotNet" />
                                </categories>
                              </test-case>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetCertHash" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetCertHashString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetEffectiveDateString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetExpirationDateString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetIssuerName" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetKeyAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetKeyAlgorithmParameters" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetKeyAlgorithmParametersString" executed="True" success="True" time="0.002" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetName" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetPublicKey" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetPublicKeyString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetRawCertData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetRawCertDataString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetSerialNumber" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_GetSerialNumberString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_Issuer" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Empty_Subject" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Equals" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Equals_Empty_Destination" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Equals_Empty_Source" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Export_Authenticode" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Export_Bad" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Export_Cert" executed="True" success="True" time="0.001" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Export_Pkcs7" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Export_SerializedStore" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Export_Unknown" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.GetObjectData" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.GetObjectData_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_1_BadPassword" executed="True" success="True" time="0.003" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_1_Properties" executed="True" success="True" time="0.018" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_1_WithoutPassword" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_2_Properties" executed="True" success="True" time="0.009" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_2_WithUnrequiredPassword" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_3_Properties" executed="True" success="True" time="0.009" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_4_Properties" executed="True" success="True" time="0.011" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs12_5_Properties" executed="True" success="True" time="0.010" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs7_Ctor" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Pkcs7_Import" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Properties" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Reset" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Reset_Issuer" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.Reset_Subject" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Cert20Test.UnrequiredPassword" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509Certificate2CollectionTest" success="True" time="0.940" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Add_X509Certificate2" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Add_X509Certificate2_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.AddRange_X509Certificate2Array" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.AddRange_X509Certificate2Array_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.AddRange_X509Certificate2Collection" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.AddRange_X509Certificate2Collection_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Contains" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Contains_Empty" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Contains_EmptyCert" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Contains_X509Certificate2_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor_X509Certificate2_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor_X509Certificate2Array" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor_X509Certificate2Array_Empty" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor_X509Certificate2Array_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor_X509CertificateCollection2" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor_X509CertificateCollection2_Empty" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Ctor_X509CertificateCollection2_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Empty" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Empty_Authenticode" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Empty_Bad" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Empty_Unknown" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Multiple_Authenticode" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Multiple_Bad" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Multiple_Cert" executed="True" success="True" time="0.001" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Multiple_Unknown" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Single_Authenticode" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Single_Bad" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Single_Cert" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Export_Single_Unknown" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_CollectionWithEmptyCert" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_Empty" executed="True" success="True" time="0.000" asserts="15" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByApplicationPolicy" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByApplicationPolicy_NotOid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByCertificatePolicy" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByCertificatePolicy_NotOid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByExtension" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByExtension_NotOid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByIssuerDistinguishedName" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByIssuerDistinguishedName_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByIssuerName" executed="True" success="True" time="0.267" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByIssuerName_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByIssuerName_NotX509KeyUsageFlags" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByKeyUsage" executed="True" success="True" time="0.315" asserts="11" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySerialNumber" executed="True" success="True" time="0.001" asserts="11" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySerialNumber_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySubjectDistinguishedName" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySubjectDistinguishedName_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySubjectKeyIdentifier" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySubjectKeyIdentifier_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySubjectName" executed="True" success="True" time="0.286" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindBySubjectName_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTemplateName" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTemplateName_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByThumbprint" executed="True" success="True" time="0.001" asserts="11" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByThumbprint_NotString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTimeExpired" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTimeExpired_NotDateTime" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTimeNotYetValid" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTimeNotYetValid_NotDateTime" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTimeValid" executed="True" success="True" time="0.001" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindByTimeValid_NotDateTime" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindType_Bad" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Find_FindValue_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.MixedCollection_Enumerator" executed="True" success="True" time="0.009" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.MixedCollection_Indexer" executed="True" success="True" time="0.008" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Remove_X509Certificate2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.Remove_X509Certificate2_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.RemoveRange_X509Certificate2Array_Empty" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.RemoveRange_X509Certificate2Array_EmptyCert" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.RemoveRange_X509Certificate2Array_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.RemoveRange_X509Certificate2Collection_Empty" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.RemoveRange_X509Certificate2Collection_EmptyCert" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.RemoveRange_X509Certificate2Collection_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2CollectionTest.X509Certificate2CollectionFindBySubjectName_Test" executed="True" success="True" time="0.001" asserts="16" />
                            </results>
                          </test-suite>
                          <test-suite name="X509Certificate2Test" success="True" time="0.173" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Base64_AsByteArray_Properties" executed="True" success="True" time="0.002" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Base64_AsFile_Properties" executed="True" success="True" time="0.028" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Base64_AsStringData" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_1_Properties" executed="True" success="True" time="0.002" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_10_Properties" executed="True" success="True" time="0.002" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_11_Properties" executed="True" success="True" time="0.001" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_12_Properties" executed="True" success="True" time="0.003" asserts="52" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_13_Properties" executed="True" success="True" time="0.002" asserts="52" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_14_Properties" executed="True" success="True" time="0.002" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_2_Properties" executed="True" success="True" time="0.001" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_3_Properties" executed="True" success="True" time="0.002" asserts="58" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_4_Properties" executed="True" success="True" time="0.001" asserts="33" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_5_Properties" executed="True" success="True" time="0.002" asserts="55" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_8_Properties" executed="True" success="True" time="0.002" asserts="43" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Certificate_9_Properties" executed="True" success="True" time="0.002" asserts="51" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Ctor_ByteArray" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Ctor_ByteArray_Password" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Ctor_FileName" executed="True" success="True" time="0.001" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Ctor_FileName_Password" executed="True" success="True" time="0.003" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_Archived_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_Archived_Set" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_Extensions" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_FriendlyName_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_FriendlyName_Set" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_GetNameInfo_DnsName" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_GetNameInfo_SimpleName" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_GetRawCertData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_GetRawCertDataString" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_HasPrivateKey" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_IssuerName" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_NotAfter" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_NotBefore" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_PrivateKey_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_PrivateKey_Set" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_PublicKey_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_RawData_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_SerialNumber_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_SignatureAlgorithm_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_SubjectName_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_Thumbprint_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_ToString" executed="True" success="True" time="0.001" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_Verify" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Empty_Version_Get" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetCertContentType_byte" executed="True" success="True" time="0.001" asserts="18" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetCertContentType_byte_BadData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetCertContentType_byte_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetCertContentType_byte_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetCertContentType_String_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetCertContentType_String_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetNameInfo_Invalid_False" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.GetNameInfo_Invalid_True" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_1_BadPassword" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_1_Properties" executed="True" success="True" time="0.016" asserts="36" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_1_WithoutPassword" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_2_Properties" executed="True" success="True" time="0.010" asserts="36" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_2_WithUnrequiredPassword" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_3_Properties" executed="True" success="True" time="0.012" asserts="36" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_4_Properties" executed="True" success="True" time="0.011" asserts="36" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_5_Properties" executed="True" success="True" time="0.011" asserts="36" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs12_6_Properties" executed="True" success="True" time="0.014" asserts="36" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs7_Ctor" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.Pkcs7_Import" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509Certificate2Test.T61String" executed="True" success="True" time="0.001" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="X509CertificateCollectionTest" success="True" time="0.025" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Add" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.AddRange_Array" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.AddRange_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.AddRange_Collection" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.AddRange_CollectionNull" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Constructor" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Constructor_CertificateArray" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Constructor_CertificateArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Constructor_CertificateCollection" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Constructor_CertificateCollection_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Contains" executed="True" success="True" time="0.001" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.CopyTo" executed="True" success="True" time="0.005" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.CopyTo_IndexNegative" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.CopyTo_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.CopyTo_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.IndexOf" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Insert" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Remove" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Remove_ByValue" executed="True" success="True" time="0.001" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateCollectionTest.Remove_Unexisting" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509ChainPolicyTest" success="True" time="0.134" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.ApplicationPolicy" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.ApplicationPolicy_Reset" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.CertificatePolicy" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.CertificatePolicy_Reset" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.Default" executed="True" success="True" time="0.001" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.ExtraStore" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.ExtraStore_Reset" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.Reset" executed="True" success="True" time="0.102" asserts="10" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.RevocationFlag" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.RevocationFlag_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.RevocationMode" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.RevocationMode_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.UrlRetrievalTimeout" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.VerificationFlags" executed="True" success="True" time="0.001" asserts="14" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.VerificationFlags_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainPolicyTest.VerificationTime" executed="True" success="True" time="0.000" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite name="X509ChainTest" success="True" time="7.534" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Cert1_X509RevocationMode_NoCheck" executed="True" success="True" time="2.412" asserts="70" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Cert1_X509RevocationMode_Offline" executed="True" success="True" time="2.162" asserts="84" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Cert2" executed="True" success="True" time="2.073" asserts="90" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Twice_DifferentCertificate" executed="True" success="True" time="0.298" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Twice_SameCertificate" executed="True" success="True" time="0.272" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Build_Twice_WithReset" executed="True" success="True" time="0.297" asserts="13" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="11" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.ConstructorMachineContextFalse" executed="True" success="True" time="0.000" asserts="11" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.ConstructorMachineContextTrue" executed="True" success="True" time="0.000" asserts="11" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.CreateViaCryptoConfig" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.Reset" executed="True" success="True" time="0.004" asserts="8" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ChainTest.StaticCreation" executed="True" success="True" time="0.000" asserts="11" />
                            </results>
                          </test-suite>
                          <test-suite name="X509EnhancedKeyUsageExtensionTest" success="True" time="0.008" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorAsnEncodedData" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorAsnEncodedData_BadAsn" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorAsnEncodedData_BadAsnLength" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorAsnEncodedData_BadAsnTag" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorAsnEncodedData_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorEmpty_EnhancedKeyUsages" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorOidCollection" executed="True" success="True" time="0.001" asserts="10" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.ConstructorOidCollection_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.CopyFrom_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.CopyFrom_Self" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.CreateViaCryptoConfig" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.WrongAsnEncodedData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.WrongExtension_X509EnhancedKeyUsageExtension" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.WrongExtension_X509Extension" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtensionTest.WrongExtension_X509Extension_KeyUsages" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509ExtensionCollectionTest" success="True" time="0.008" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Add" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.CopyTo" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.CopyTo_EmptyArray" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.CopyTo_EmptyCollection" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.CopyTo_Negative" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.CopyTo_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Defaults" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.ICollection_CopyTo" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.ICollection_CopyTo_EmptyArray" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.ICollection_CopyTo_EmptyCollection" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.ICollection_CopyTo_Negative" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.ICollection_CopyTo_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Indexer_Int" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Indexer_Int_Negative" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Indexer_Int_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Indexer_String" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionCollectionTest.Indexer_String_Null" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509ExtensionTest" success="True" time="0.008" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.Build_NetscapeCertTypeExtension" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorAsnEncodedData" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorAsnEncodedData_BadAsn" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorAsnEncodedData_BadAsnLength" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorAsnEncodedData_BadAsnTag" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorAsnEncodedData_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorAsnEncodedData_WithNullOid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorOid_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorOid_RawNull" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorString_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.ConstructorString_RawNull" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.CopyFrom_AsnEncodedData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509ExtensionTest.CopyFrom_Null" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509KeyUsageExtensionTest" success="True" time="0.012" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorAsnEncodedData" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorAsnEncodedData_BadAsn" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorAsnEncodedData_BadAsnLength" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorAsnEncodedData_BadAsnTag" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorAsnEncodedData_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorKeyUsage_CRLSign" executed="True" success="True" time="0.001" asserts="66" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.ConstructorKeyUsage_Invalid" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.CopyFrom_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.CopyFrom_Self" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.CreateViaCryptoConfig" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.WrongAsnEncodedData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.WrongExtension_X509EnhancedKeyUsageExtension" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.WrongExtension_X509Extension" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509KeyUsageExtensionTest.WrongExtension_X509Extension_KeyUsages" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509StoreTest" success="True" time="0.059" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Add_Empty_Certificate" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Add_ExistingCertificateReadOnly" executed="True" success="True" time="0.002" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Add_NotOpened" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Add_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Add_OpenReadOnly" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Add_SameCertificate" executed="True" success="True" time="0.001" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange" executed="True" success="True" time="0.004" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange_Empty_Certificate" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange_Empty_Closed" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange_Empty_ReadOnly" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange_Empty_ReadWrite" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange_NotOpened" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.AddRange_OpenReadOnly" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Close_Collection" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Close_NotOpen" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Collection_Add" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorIntPtr" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreLocation_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreLocationCurrentUser" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreLocationLocalMachine" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreName_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameAddressBook" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameAuthRoot" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameCertificateAuthority" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameDisallowed" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameMy" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameRoot" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameTrustedPeople" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreNameTrustedPublisher" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreString_Empty" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreString_Null" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringAddressBook" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringAuthRoot" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringCertificateAuthority" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringDisallowed" executed="True" success="True" time="0.002" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringMono" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringMy" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringRoot" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringTrustedPeople" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.ConstructorStoreStringTrustedPublisher" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Open_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Open_OpenExistingOnly" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Open_Store_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Open_Store_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Remove_Empty_Certificate" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Remove_NotOpened" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Remove_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Remove_OpenReadOnly_Existing" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.Remove_OpenReadOnly_Unexisting" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.RemoveRange_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.RemoveRange_Empty_Certificate" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.RemoveRange_NotOpened" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.RemoveRange_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.RemoveRange_OpenReadOnly_Existing" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509StoreTest.RemoveRange_OpenReadOnly_Unexisting" executed="True" success="True" time="0.001" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509SubjectKeyIdentifierExtensionTest" success="True" time="0.024" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorAsnEncodedData" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorAsnEncodedData_BadAsn" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorAsnEncodedData_BadAsnLength" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorAsnEncodedData_BadAsnTag" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorAsnEncodedData_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorAsnEncodedData_SmallestValid" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorByteArray_20" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorByteArray_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorByteArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorEmpty_SubjectKeyIdentifier" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_BadX509SubjectKeyIdentifierHashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_CapiSha1" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_CapiSha1_Critical" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_Critical" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_Sha1" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_Sha1_Critical" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_ShortSha1" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorPublicKeyHash_ShortSha1_Critical" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorString" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorString_Empty" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorString_NotHex" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorString_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.ConstructorString_Single" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.CopyFrom_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.CopyFrom_Self" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.CreateViaCryptoConfig" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.WrongAsnEncodedData" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.WrongExtension_X509Extension" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.WrongExtension_X509Extension_CertificateAuthority" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtensionTest.WrongExtension_X509KeyUsageExtension" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Permissions" success="True" time="0.062" asserts="0">
                    <results>
                      <test-suite name="ResourcePermissionBaseEntryTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseEntryTest.Constructor_Default" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseEntryTest.Constructor_IntString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseEntryTest.Constructor_Negative" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseEntryTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ResourcePermissionBaseTest" success="True" time="0.020" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.AddPermissionAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.AddPermissionAccess_Duplicates_DifferentInstances" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.AddPermissionAccess_Duplicates_SameInstance" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.AddPermissionAccess_MismatchTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.AddPermissionAccess_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.AddPermissionAccess_SemiDuplicates" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Clear" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Constants" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Constructor_Empty" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Constructor_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Constructor_None" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Constructor_Unrestricted" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Copy" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.GetPermissionEntries" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Intersect_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.IsSubsetOf_DifferentPermissions" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.PermissionAccessType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.PermissionAccessType_NonEnum" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.PermissionAccessType_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.RemovePermissionAccess" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.RemovePermissionAccess_MismatchTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.RemovePermissionAccess_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.RemovePermissionAccess_Unexisting" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.TagNames" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.TagNames_Length" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.TagNames_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.ToXml" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.ToXml_Unrestricted" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Union" executed="True" success="True" time="0.000" asserts="18" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Union_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ResourcePermissionBaseTest.Unrestricted_AddRemove" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="StorePermissionAttributeTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.AddToStore" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.CreateStore" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.DeleteStore" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.EnumerateCertificates" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.EnumerateStores" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.Flags" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.Flags_Invalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.OpenStore" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.RemoveFromStore" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="StorePermissionTest" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Copy" executed="True" success="True" time="0.001" asserts="126" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Flags_StorePermissionFlags_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Intersect_None" executed="True" success="True" time="0.001" asserts="254" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Intersect_Null" executed="True" success="True" time="0.000" asserts="127" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Intersect_Self" executed="True" success="True" time="0.000" asserts="127" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Intersect_Unrestricted" executed="True" success="True" time="0.001" asserts="254" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.IsSubset_None" executed="True" success="True" time="0.001" asserts="254" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.IsSubset_Null" executed="True" success="True" time="0.000" asserts="127" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.IsSubset_Self" executed="True" success="True" time="0.000" asserts="126" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.IsSubset_Unrestricted" executed="True" success="True" time="0.001" asserts="254" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.PermissionState_None" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.PermissionState_None_Copy" executed="False">
                            <reason>
                              <message><![CDATA[2.0 final bug reported as FDBK40928]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.PermissionState_Unrestricted" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.StorePermissionFlags_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.StorePermissionFlags_BadEight" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Union_None" executed="True" success="True" time="0.001" asserts="509" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Union_Null" executed="True" success="True" time="0.000" asserts="127" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Union_Self" executed="True" success="True" time="0.000" asserts="127" />
                          <test-case name="MonoTests.System.Security.Permissions.StorePermissionTest.Union_Unrestricted" executed="True" success="True" time="0.003" asserts="254" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Text" success="True" time="10.310" asserts="0">
                <results>
                  <test-suite name="RegularExpressions" success="True" time="10.309" asserts="0">
                    <results>
                      <test-suite name="CompiledRegexTest" success="True" time="4.625" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.CacheSize" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.CacheSize_Min" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.CacheSize_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Escape_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.InvalidOptions1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.InvalidOptions2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_BadLength1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_BadLength2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_BadStart1" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_BadStart2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_BadStart3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_BadStart4" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_Null1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_SubstringAnchors" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match_SubstringRtl" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match1" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Match2" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Matches" executed="True" success="True" time="0.006" asserts="606" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Matches_Null1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Matches_Null2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Matches_Null3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.NullPattern1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.NullPattern2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.PrimeRegex" executed="True" success="True" time="4.594" asserts="3332" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_EvaluatorNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_InputNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_InputNull2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_InputNull3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_InputNull4" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_InvalidCount" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_InvalidStart" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Replace_ReplacementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Simple" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Split_InputNull1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Split_InputNull2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Split_InvalidCount" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Split_InvalidCount2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Unescape" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.CompiledRegexTest.Unescape_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="GroupTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.GroupTest.Synchronized_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.GroupTest.Synchronized_Inner_Null" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="InterpretedRegexTest" success="True" time="4.666" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.CacheSize" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.CacheSize_Min" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.CacheSize_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Escape_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.InvalidOptions1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.InvalidOptions2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_BadLength1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_BadLength2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_BadStart1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_BadStart2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_BadStart3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_BadStart4" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_Null1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_SubstringAnchors" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match_SubstringRtl" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match1" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Match2" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Matches" executed="True" success="True" time="0.000" asserts="606" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Matches_Null1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Matches_Null2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Matches_Null3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.NullPattern1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.NullPattern2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.PrimeRegex" executed="True" success="True" time="4.647" asserts="3332" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_EvaluatorNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_InputNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_InputNull2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_InputNull3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_InputNull4" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_InvalidCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_InvalidStart" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Replace_ReplacementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Simple" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Split_InputNull1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Split_InputNull2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Split_InvalidCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Split_InvalidCount2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Unescape" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.InterpretedRegexTest.Unescape_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MatchTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.MatchTest.Match_Backref" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.MatchTest.Result_Match_Empty" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.MatchTest.Result_Replacement_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.MatchTest.Result_Replacement_Null" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.MatchTest.Synchronized_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.MatchTest.Synchronized_Inner_Null" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="PerlTest" success="True" time="0.647" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0000" executed="True" success="True" time="0.015" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0001" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0002" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0003" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0004" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0005" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0006" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0007" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0008" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0009" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0010" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0011" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0012" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0013" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0014" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0015" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0016" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0017" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0018" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0019" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0020" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0021" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0022" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0023" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0024" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0025" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0026" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0027" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0028" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0029" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0030" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0031" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0032" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0033" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0034" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0035" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0036" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0037" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0038" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0039" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0040" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0041" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0042" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0043" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0044" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0045" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0046" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0047" executed="True" success="True" time="0.006" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0048" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0049" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0050" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0051" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0052" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0053" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0054" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0055" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0056" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0057" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0058" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0059" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0060" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0061" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0062" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0063" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0064" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0065" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0066" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0067" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0068" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0069" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0070" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0071" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0072" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0073" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0074" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0075" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0076" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0077" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0078" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0079" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0080" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0081" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0082" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0083" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0084" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0085" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0086" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0087" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0088" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0089" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0090" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0091" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0092" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0093" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0094" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0095" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0096" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0097" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0098" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0099" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0100" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0101" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0102" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0103" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0104" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0105" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0106" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0107" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0108" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0109" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0110" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0111" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0112" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0113" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0114" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0115" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0116" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0117" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0118" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0119" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0120" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0121" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0122" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0123" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0124" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0125" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0126" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0127" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0128" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0129" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0130" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0131" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0132" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0133" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0134" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0135" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0136" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0137" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0138" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0139" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0140" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0141" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0142" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0143" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0144" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0145" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0146" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0147" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0148" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0149" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0150" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0151" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0152" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0153" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0154" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0155" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0156" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0157" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0158" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0159" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0160" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0161" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0162" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0163" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0164" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0165" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0166" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0167" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0168" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0169" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0170" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0171" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0172" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0173" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0174" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0175" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0176" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0177" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0178" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0179" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0180" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0181" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0182" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0183" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0184" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0185" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0186" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0187" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0188" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0189" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0190" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0191" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0192" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0193" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0194" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0195" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0196" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0197" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0198" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0199" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0200" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0201" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0202" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0203" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0204" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0205" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0206" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0207" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0208" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0209" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0210" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0211" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0212" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0213" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0214" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0215" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0216" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0217" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0218" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0219" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0220" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0221" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0222" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0223" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0224" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0225" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0226" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0227" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0228" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0229" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0230" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0231" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0232" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0233" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0234" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0235" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0236" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0237" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0238" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0239" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0240" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0241" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0242" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0243" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0244" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0245" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0246" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0247" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0248" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0249" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0250" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0251" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0252" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0253" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0254" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0255" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0256" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0257" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0258" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0259" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0260" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0261" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0262" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0263" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0264" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0265" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0266" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0267" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0268" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0269" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0270" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0271" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0272" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0273" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0274" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0275" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0276" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0277" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0278" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0279" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0280" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0281" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0282" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0283" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0284" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0285" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0286" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0287" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0288" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0289" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0290" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0291" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0292" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0293" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0294" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0295" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0296" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0297" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0298" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0299" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0300" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0301" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0302" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0303" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0304" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0305" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0306" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0307" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0308" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0309" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0310" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0311" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0312" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0313" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0314" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0315" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0316" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0317" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0318" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0319" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0320" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0321" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0322" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0323" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0324" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0325" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0326" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0327" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0328" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0329" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0330" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0331" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0332" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0333" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0334" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0335" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0336" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0337" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0338" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0339" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0340" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0341" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0342" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0343" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0344" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0345" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0346" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0347" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0348" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0349" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0350" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0351" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0352" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0353" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0354" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0355" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0356" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0357" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0358" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0359" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0360" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0361" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0362" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0363" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0364" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0365" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0366" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0367" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0368" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0369" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0370" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0371" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0372" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0373" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0374" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0375" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0376" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0377" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0378" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0379" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0380" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0381" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0382" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0383" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0384" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0385" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0386" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0387" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0388" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0389" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0390" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0391" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0392" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0393" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0394" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0395" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0396" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0397" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0398" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0399" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0400" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0401" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0402" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0403" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0404" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0405" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0406" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0407" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0408" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0409" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0410" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0411" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0412" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0413" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0414" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0415" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0416" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0417" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0418" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0419" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0420" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0421" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0422" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0423" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0424" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0425" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0426" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0427" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0428" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0429" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0430" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0431" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0432" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0433" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0434" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0435" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0436" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0437" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0438" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0439" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0440" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0441" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0442" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0443" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0444" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0445" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0446" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0447" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0448" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0449" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0450" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0451" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0452" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0453" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0454" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0455" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0456" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0457" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0458" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0459" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0460" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0461" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0462" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0463" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0464" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0465" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0466" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0467" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0468" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0469" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0470" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0471" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0472" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0473" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0474" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0475" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0476" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0477" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0478" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0479" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0480" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0481" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0482" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0483" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0484" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0485" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0486" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0487" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0488" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0489" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0490" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0491" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0492" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0493" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0494" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0495" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0496" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0497" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0498" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0499" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0500" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0501" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0502" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0503" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0504" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0505" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0506" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0507" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0508" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0509" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0510" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0511" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0512" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0513" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0514" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0515" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0516" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0517" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0518" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0519" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0520" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0521" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0522" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0523" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0524" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0525" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0526" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0527" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0528" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0529" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0530" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0531" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0532" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0533" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0534" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0535" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0536" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0537" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0538" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0539" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0540" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0541" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0542" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0543" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0544" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0545" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0546" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0547" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0548" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0549" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0550" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0551" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0552" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0553" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0554" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0555" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0556" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0557" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0558" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0559" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0560" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0561" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0562" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0563" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0564" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0565" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0566" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0567" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0568" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0569" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0570" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0571" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0572" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0573" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0574" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0575" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0576" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0577" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0578" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0579" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0580" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0581" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0582" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0583" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0584" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0585" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0586" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0587" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0588" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0589" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0590" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0591" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0592" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0593" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0594" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0595" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0596" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0597" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0598" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0599" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0600" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0601" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0602" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0603" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0604" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0605" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0606" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0607" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0608" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0609" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0610" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0611" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0612" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0613" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0614" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0615" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0616" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0617" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0618" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0619" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0620" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0621" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0622" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0623" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0624" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0625" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0626" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0627" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0628" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0629" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0630" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0631" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0632" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0633" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0634" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0635" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0636" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0637" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0638" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0639" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0640" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0641" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0642" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0643" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0644" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0645" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0646" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0647" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0648" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0649" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0650" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0651" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0652" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0653" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0654" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0655" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0656" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0657" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0658" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0659" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0660" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0661" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0662" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0663" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0664" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0665" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0666" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0667" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0668" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0669" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0670" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0671" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0672" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0673" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0674" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0675" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0676" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0677" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0678" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0679" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0680" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0681" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0682" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0683" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0684" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0685" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0686" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0687" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0688" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0689" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0690" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0691" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0692" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0693" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0694" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0695" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0696" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0697" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0698" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0699" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0700" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0701" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0702" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0703" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0704" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0705" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0706" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0707" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0708" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0709" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0710" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0711" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0712" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0713" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0714" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0715" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0716" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0717" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0718" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0719" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0720" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0721" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0722" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0723" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0724" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0725" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0726" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0727" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0728" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0729" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0730" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0731" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0732" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0733" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0734" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0735" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0736" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0737" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0738" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0739" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0740" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0741" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0742" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0743" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0744" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0745" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0746" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0747" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0748" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0749" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0750" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0751" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0752" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0753" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0754" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0755" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0756" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0757" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0758" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0759" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0760" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0761" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0762" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0763" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0764" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0765" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0766" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0767" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0768" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0769" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0770" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0771" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0772" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0773" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0774" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0775" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0776" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0777" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0778" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0779" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0780" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0781" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0782" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0783" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0784" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0785" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0786" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0787" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0788" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0789" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0790" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0791" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0792" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0793" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0794" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0795" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0796" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0797" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0798" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0799" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0800" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0801" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0802" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0803" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0804" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0805" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0806" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0807" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0808" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0809" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0810" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0811" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0812" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0813" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0814" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0815" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0816" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0817" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0818" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0819" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0820" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0821" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0822" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0823" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0824" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0825" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0826" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0827" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0828" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0829" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0830" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0831" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0832" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0833" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0834" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0835" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0836" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0837" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0838" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0839" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0840" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0841" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0842" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0843" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0844" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0845" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0846" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0847" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0848" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0849" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0850" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0851" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0852" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0853" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0854" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0855" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0856" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0857" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0858" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0859" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0860" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0861" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0862" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0863" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0864" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0865" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0866" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0867" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0868" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0869" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0870" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0871" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0872" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0873" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0874" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0875" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0876" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0877" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0878" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0879" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0880" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0881" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0882" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0883" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0884" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0885" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0886" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0887" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0888" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0889" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0890" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0891" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0892" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0893" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0894" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0895" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0896" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0897" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0898" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0899" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0900" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0901" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0902" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0903" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0904" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0905" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0906" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0907" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0908" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0909" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0910" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0911" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0912" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0913" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0914" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0915" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0916" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0917" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0918" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0919" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0920" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0921" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0922" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0923" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0924" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0925" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0926" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0927" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0928" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0929" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0930" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0931" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0932" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0933" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0934" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0935" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0936" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0937" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0938" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0939" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0940" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0941" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0942" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0943" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0944" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0945" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0946" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0947" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0948" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0949" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0950" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0951" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0952" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0953" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0954" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0955" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0956" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0957" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0958" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0959" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0960" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0961" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0962" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0963" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0964" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0965" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0966" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0967" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0968" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0969" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0970" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0971" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0972" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0973" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0974" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0975" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0976" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0977" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0978" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0979" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0980" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0981" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0982" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0983" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0984" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0985" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0986" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0987" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0988" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0989" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0990" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trial0991" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.PerlTest.Trials" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RegexBugs" success="True" time="0.059" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.BackSpace" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Braces" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug313642" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug432172" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug439947" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.bug443841" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug610587_RepetitionOfPositionAssertion" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug69269" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug76345" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug77487" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug78007" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug80554_0" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug80554_1" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug80554_2" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Bug80554_3" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.BugXamarin11616" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.BugXamarin12612" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.BugXamarin2663" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.BugXamarin3866" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.BugXamarin4523" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.BugXamarin7587" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.CaseAndSearch" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.CategoryAndNegated" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.CharacterClassParse" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.CharClassWithIgnoreCase" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Escape0" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.GroupNumbers" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.HangingHyphen1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.HangingHyphens" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.MathEmptyGroup" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.MultipleMatches" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.NameLookupInEmptyMatch" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.No65535Limit" executed="True" success="True" time="0.025" asserts="24" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.NoBitmap" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Quantifiers1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Quantifiers2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Quantifiers3" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Quantifiers4" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Quantifiers5" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.QuantifiersParseError" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.RangeIgnoreCase" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.ReplaceNegOneAndStartat" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.SameNameGroups" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.SplitGroup" executed="True" success="True" time="0.001" asserts="24" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.SplitInfiniteLoop" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.Trials" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.UndefinedGroup" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs.WhiteSpaceGroupped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RegexBugs2" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexBugs2.BugXamarin7578" executed="True" success="True" time="0.031" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RegexCompilationInfoTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Constructor" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Constructor_EmptyName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Constructor_InvalidRegexOptions" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Constructor_NullName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Constructor_NullNamespace" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Constructor_NullPattern" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Name_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Name_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Namespace_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Options_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexCompilationInfoTest.Pattern_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RegexMatchTests" success="True" time="0.046" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0000" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0001" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0003" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0004" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0006" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0007" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0017" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0019" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0020" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0021" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0022" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0023" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0024" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0025" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0026" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0027" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0028" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0029" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0030" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0031" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0032" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0033" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0034" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0035" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0036" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0037" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0038" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0039" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0040" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0041" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0042" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0043" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0044" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0045" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0046" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0047" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0048" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0049" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0050" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0051" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexJvmTrial0052" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0053" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0054" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0055" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0056" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0057" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0058" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0059" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0060" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0061" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0062" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0063" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0064" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0065" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0066" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0067" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0068" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0069" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexMatchTests.RegexTrial0070" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RegexReplaceTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTest.EvaluatorTests" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTest.ReplaceTests" executed="True" success="True" time="0.002" asserts="91" />
                        </results>
                      </test-suite>
                      <test-suite name="RegexReplaceTests" success="True" time="0.071" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_001" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_002" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_003" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_004" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_005" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_006" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_007" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_008" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_009" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_010" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_011" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_012" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_013" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_014" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_015" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_016" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_017" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_018" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_019" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_020" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_021" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_022" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_023" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_024" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_025" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_026" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_027" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_028" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_029" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_030" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_031" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_032" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_033" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_034" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_035" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_036" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_037" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_038" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_039" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_040" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_041" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_042" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_043" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_044" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_045" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_046" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_047" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_048" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_049" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_050" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_051" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_052" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_053" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_054" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_055" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_056" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_057" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_058" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_059" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_060" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_061" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_062" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_063" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_064" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_065" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_066" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_067" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_068" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_069" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_070" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_071" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_072" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_073" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_074" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_075" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_076" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_077" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_078" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_079" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_080" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_081" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_082" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_083" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_084" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_085" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_086" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_087" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_088" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_089" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_090" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_091" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_092" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_093" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_094" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_095" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_096" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_097" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_098" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_099" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_100" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_101" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_102" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexReplaceTests.ReplaceTest_103" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RegexResultTests" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_000" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_001" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_002" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_003" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_004" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_005" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_006" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_007" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_008" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_009" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_010" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_011" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_012" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_013" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_014" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_015" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_016" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_017" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_018" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_019" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_020" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_021" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_022" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_023" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_024" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_025" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_026" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_027" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_028" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_029" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_030" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_031" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_032" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_033" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_034" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_035" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_036" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_037" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_038" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_039" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_040" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_041" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_042" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_043" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.RegexResultTests.ResultTest_045" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SpliTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Text.RegularExpressions.SpliTest.NoGroups" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.SpliTest.SingleGroup" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.SpliTest.ThreGroups" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.SpliTest.TwoGroups" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.SpliTest.TwoGroupsInverted" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Text.RegularExpressions.SpliTest.TwoValidGroups" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Threading" success="True" time="0.021" asserts="0">
                <results>
                  <test-suite name="BarrierTests" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.BarrierTests.AddParticipantTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.BarrierTests.RemoveParticipantTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.BarrierTests.RemoveTriggeringTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.BarrierTests.SignalSimple" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.BarrierTests.SignalTest" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="SemaphoreTest" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntInt" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntInt_InitialBiggerThanMaximum" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntInt_NegativeInitialCount" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntInt_ZeroMaximumCount" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntString_InitialBiggerThanMaximum" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntString_NegativeInitialCount" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntString_NullName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntString_ZeroMaximumCount" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBool_InitialBiggerThanMaximum" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBool_NegativeInitialCount" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBool_NullName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBool_ZeroMaximumCount" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBoolSecurity" executed="True" success="True" time="0.003" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBoolSecurity_InitialBiggerThanMaximum" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBoolSecurity_NegativeInitialCount" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBoolSecurity_NullName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Constructor_IntIntStringBoolSecurity_ZeroMaximumCount" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.OpenExisting_EmptyName" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.OpenExisting_NullName" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.OpenExisting_TooLongName" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.OpenExisting_Unexisting" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Release" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SemaphoreTest.Release_Zero" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Timers" success="False" time="1.759" asserts="0">
                <results>
                  <test-suite name="TimerTest" success="False" time="1.759" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Timers.TimerTest.AutoReset" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Timers.TimerTest.CloseEnabled" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor0" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor1" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor1_Interval_Max" executed="True" success="True" time="0.003" asserts="6" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor1_Interval_Max_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor1_Interval_Min_1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor1_Interval_Min_2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor1_Interval_Negative" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Constructor1_Interval_Zero" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Disposed_ThrowOnEnabled" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Timers.TimerTest.DisposedMeansDisabled_NoThrow" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Timers.TimerTest.DoubleClose_NoThrow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Elapsed_DontFireIfDisposed" executed="True" success="True" time="0.501" asserts="1" />
                      <test-case name="MonoTests.System.Timers.TimerTest.EnabledInElapsed" executed="True" success="False" time="0.204" asserts="1">
                        <failure>
                          <message><![CDATA[  #1 loss of events
  Expected: True
  But was:  False
]]></message>
                          <stack-trace><![CDATA[at MonoTests.System.Timers.TimerTest.EnabledInElapsed () [0x0005e] in /home/alexander/dev/mono/mcs/class/System/Test/System.Timers/TimerTest.cs:302
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00048] in /home/alexander/dev/mono/mcs/class/corlib/System.Reflection/MonoMethod.cs:293
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="MonoTests.System.Timers.TimerTest.Interval" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Interval_Negative" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Interval_TooHigh_Disabled_NoThrow" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Interval_TooHigh_Enabled_Throw" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Interval_TooHigh_ThrowOnEnabled" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Timers.TimerTest.Interval_Zero" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Timers.TimerTest.StartStopEnabled" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Timers.TimerTest.TestRaceCondition" executed="True" success="False" time="1.002" asserts="1">
                        <failure>
                          <message><![CDATA[  #1
  Expected: True
  But was:  False
]]></message>
                          <stack-trace><![CDATA[at MonoTests.System.Timers.TimerTest.TestRaceCondition () [0x00000] in /home/alexander/dev/mono/mcs/class/System/Test/System.Timers/TimerTest.cs:308
at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&)
at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00048] in /home/alexander/dev/mono/mcs/class/corlib/System.Reflection/MonoMethod.cs:293
]]></stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="UriBuilderTest" success="True" time="0.026" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriBuilderTest.AspNetRedirectUsage_New" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.UriBuilderTest.AspNetRedirectUsage_Old" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriBuilderTest.BadPort1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor_5" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor_5_BadExtraValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor_Empty" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor_RelativeUri" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor_StringStringInt" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor1" executed="True" success="True" time="0.002" asserts="18" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor1_Uri_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriBuilderTest.Constructor2_Uri_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriBuilderTest.DefaultPort" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriBuilderTest.EmptyQuery" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.UriBuilderTest.Equals" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.UriBuilderTest.Fragment" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.UriBuilderTest.IPv6_Host" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.UriBuilderTest.IPv6_Host_IncompleteAddress" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriBuilderTest.Path" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriBuilderTest.Path_UriAbsolutePath_Path" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriBuilderTest.Query" executed="True" success="True" time="0.000" asserts="10" />
                  <test-case name="MonoTests.System.UriBuilderTest.Scheme" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriBuilderTest.TestAppendFragment" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriBuilderTest.TestToString76501" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriBuilderTest.ToStringTest" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriBuilderTest.UnparsableUri" executed="True" success="True" time="0.000" asserts="10" />
                  <test-case name="MonoTests.System.UriBuilderTest.UserInfo" executed="True" success="True" time="0.000" asserts="9" />
                </results>
              </test-suite>
              <test-suite name="UriParserTest" success="True" time="0.017" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriParserTest.GetComponents" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.UriParserTest.GetComponents_BadUriComponents" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriParserTest.GetComponents_BadUriFormat" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.GetComponents_Ftp" executed="True" success="True" time="0.001" asserts="21" />
                  <test-case name="MonoTests.System.UriParserTest.GetComponents_Ftp2" executed="True" success="True" time="0.001" asserts="21" />
                  <test-case name="MonoTests.System.UriParserTest.GetComponents_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.InitializeAndValidate" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriParserTest.InitializeAndValidate_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.IsBaseOf" executed="True" success="True" time="0.001" asserts="25" />
                  <test-case name="MonoTests.System.UriParserTest.IsBaseOf_NullUri" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.IsBaseOf_UriNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.IsKnownScheme_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.IsKnownScheme_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.IsKnownScheme_WellKnown" executed="True" success="True" time="0.000" asserts="16" />
                  <test-case name="MonoTests.System.UriParserTest.OnRegister" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriParserTest.Register" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriParserTest.Register_Minus1Port" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.Register_NegativePort" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.Register_NullParser" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.Register_NullScheme" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.Register_TooBigPort" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.Register_UInt16PortMinus1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriParserTest.ReRegister" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriParserTest.TestParseUserPath" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="UriPermutationsTest" success="True" time="0.032" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_AbsolutePath" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_AbsolutePath.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_AbsoluteUri" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_AbsoluteUri.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_Fragment" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_Fragment.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_AbsoluteUri" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_AbsoluteUri.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Fragment" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Fragment.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Host" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Host.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Path" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Path.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_PathAndQuery" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_PathAndQuery.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Query" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_GetComponents_Query.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_Query" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_Query.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_ToString" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_ToString.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.PercentageEncoding_Unescape" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.PercentageEncoding_Unescape.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.Reduce_AbsoluteUri" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.Reduce_AbsoluteUri.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriPermutationsTest.Reduce_ToString" executed="False">
                    <reason>
                      <message><![CDATA[/home/alexander/dev/mono/mcs/class/System/Test/System/UriPermutationsTest/NET_4_5/MonoTests.System.UriPermutationsTest.Reduce_ToString.txt does not exist. 
The file should be generated by running on .NET the same test with StringTester.CreateMode = true.]]></message>
                    </reason>
                  </test-case>
                </results>
              </test-suite>
              <test-suite name="UriTest" success="True" time="0.076" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriTest.Bad_IPv6" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.CachingSegments" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.CaseSensitivity" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTest.CheckHostName1" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTest.CheckHostName2" executed="True" success="True" time="0.001" asserts="46" />
                  <test-case name="MonoTests.System.UriTest.CheckSchemeName" executed="True" success="True" time="0.000" asserts="11" />
                  <test-case name="MonoTests.System.UriTest.CheckSchemeName_AnyOtherChar" executed="True" success="True" time="0.000" asserts="256" />
                  <test-case name="MonoTests.System.UriTest.CheckSchemeName_FirstChar" executed="True" success="True" time="0.000" asserts="256" />
                  <test-case name="MonoTests.System.UriTest.ConsecutiveSlashes" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.Constructor_DualHostPort" executed="True" success="True" time="0.001" asserts="21" />
                  <test-case name="MonoTests.System.UriTest.Constructor_NullStringBool" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.Constructor_UriNullBool" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.Constructors" executed="True" success="True" time="0.003" asserts="72" />
                  <test-case name="MonoTests.System.UriTest.ConstructorsRejectRelativePath" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.EmptyScheme" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.Equals1" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest.Equals2" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.Equals3" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.Equals4" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.Fragment_Escape" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.Fragment_RelativeUri" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.UriTest.FromHex" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTest.FtpRootPath" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_AbsoluteUri" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_Fragment" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_HttpRequestUrl" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_KeepDelimiter" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_Path" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_PathAndQuery" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_Query" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_Relative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.GetComponents_StrongAuthority" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.GetLeftPart" executed="True" success="True" time="0.002" asserts="21" />
                  <test-case name="MonoTests.System.UriTest.GetLeftPart_Partial1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.GetLeftPart_Partial2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.GetLeftPart_Partial3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.GetSerializationInfoStringException" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.GetSerializationInfoStringOnRelativeUri" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.HexEscape" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest.HexUnescape" executed="True" success="True" time="0.000" asserts="14" />
                  <test-case name="MonoTests.System.UriTest.HexUnescapeMultiByte" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriTest.HttpHostname1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.HttpHostname2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.HttpHostname3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.HttpHostname4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.HttpHostname5" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.HttpHostname6" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.HttpHostname7" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.IncompleteSchemeDelimiter" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.InvalidFile1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.InvalidFile2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.InvalidFile3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.InvalidPort1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.InvalidPort2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.InvalidPort3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.InvalidScheme" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.IsHexDigit" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTest.IsHexEncoding" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.IsLoopback" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.UriTest.IsLoopback_File" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.IsLoopback_Relative_Http" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.IsLoopback_Relative_Unknown" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.LeadingSlashes" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.UriTest.LeadingSlashes_BadResultsOn1x" executed="True" success="True" time="0.001" asserts="30" />
                  <test-case name="MonoTests.System.UriTest.LeadingSlashes_FailOn1x" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.UriTest.LeadingSlashes_ShouldFailOn1x" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.LocalPath" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_Escape" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_FileHost" executed="True" success="True" time="0.000" asserts="14" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_FileNameWithAtSign1" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_FileNameWithAtSign2" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_FileNameWithAtSign3" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_FileNameWithAtSign4" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_FileNameWithAtSign5" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.LocalPath_FileNameWithAtSign6" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.LocalPathWithBaseUrl" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.MakeRelative" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.UriTest.MoreHexEscape" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.NewsDefaultPort" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.NoHostname" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.NoHostname2" executed="True" success="True" time="0.001" asserts="19" />
                  <test-case name="MonoTests.System.UriTest.ParseOverride" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.PortMax" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.QueryEscape" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.RelativeCtor" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriTest.RelativeCtor_11_Crasher" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.RelativeEqualsTest" executed="True" success="True" time="0.000" asserts="10" />
                  <test-case name="MonoTests.System.UriTest.RelativeFragmentUri" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.RelativeFragmentUri2" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.UriTest.RelativeGetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.RelativeUriWithColons" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.SchemeWithDigits" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.Segments1" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.Segments2" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.Segments3" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest.Segments4" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTest.Segments5" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest.TestEquals2" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest.TestEscapeDataString" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.TestEscapeUriString" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.TestPartialToString" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest.TestUTF8Strings" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.Unc" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest.UncFail" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTest.Unescape" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.UriTest.UnixAbsoluteFilePath_WithSpecialChars1" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTest.UnixAbsoluteFilePath_WithSpecialChars2" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTest.UnixLocalPath" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.UnixLocalPath_WTF" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest.UnixPath" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.UriStartingWithColon" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.UserInfo_EscapedAt" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.UserInfo_EscapedChars" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.UriTest.UserInfo_EscapedLetter" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest.WindowsLocalPath" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="UriTest2" success="True" time="0.033" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriTest2.AbsoluteUriFromFile" executed="False">
                    <reason>
                      <message><![CDATA[Tests needs to be updated for 2.0]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriTest2.AbsoluteUriFromFileManual" executed="False">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                    <reason>
                      <message><![CDATA[Tests needs to be updated for 2.0]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriTest2.BadUri" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.UriTest2.Bug496783" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.UriTest2.CheckHostName" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest2.ColonButNoPort" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTest2.DriveAndForwardSlashes_Segments" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest2.EmptyUserInfo" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest2.File" executed="True" success="True" time="0.001" asserts="15" />
                  <test-case name="MonoTests.System.UriTest2.FileScheme" executed="True" success="True" time="0.001" asserts="25" />
                  <test-case name="MonoTests.System.UriTest2.Fragment_SpecialCharacters" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest2.FtpScheme" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.UriTest2.Host_Drive" executed="True" success="True" time="0.001" asserts="27" />
                  <test-case name="MonoTests.System.UriTest2.HttpsWithDefaultPort" executed="True" success="True" time="0.000" asserts="15" />
                  <test-case name="MonoTests.System.UriTest2.HttpsWithNonStandardPort" executed="True" success="True" time="0.001" asserts="15" />
                  <test-case name="MonoTests.System.UriTest2.HttpsWithoutPort" executed="True" success="True" time="0.001" asserts="15" />
                  <test-case name="MonoTests.System.UriTest2.HttpWithDefaultPort" executed="True" success="True" time="0.000" asserts="15" />
                  <test-case name="MonoTests.System.UriTest2.HttpWithNonStandardPort" executed="True" success="True" time="0.000" asserts="15" />
                  <test-case name="MonoTests.System.UriTest2.HttpWithoutPort" executed="True" success="True" time="0.000" asserts="15" />
                  <test-case name="MonoTests.System.UriTest2.InvalidIPAddress_Bug76659" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest2.IPv6SafeDnsName" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.UriTest2.LocalFile" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.UriTest2.LocalhostFile" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.UriTest2.LocalhostWinFile" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.UriTest2.Merge_Fragment_RelativePath" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests.System.UriTest2.Merge_Query_Fragment" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest2.Merge_Query_Query" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest2.Merge_Query_RelativePath" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests.System.UriTest2.MergeWithConfusingRelativeUri" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest2.MoreUnescape" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest2.NewsScheme" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.UriTest2.NntpScheme" executed="True" success="True" time="0.001" asserts="25" />
                  <test-case name="MonoTests.System.UriTest2.NoHostName1_Bug76146" executed="True" success="True" time="0.000" asserts="13" />
                  <test-case name="MonoTests.System.UriTest2.NoHostName2_Bug76146" executed="True" success="True" time="0.000" asserts="13" />
                  <test-case name="MonoTests.System.UriTest2.NonAsciiHost" executed="True" success="True" time="0.000" asserts="13" />
                  <test-case name="MonoTests.System.UriTest2.OriginalPathEscaped" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest2.PathReduction_2e" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest2.Ports" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.UriTest2.Query_SpecialCharacters" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTest2.Relative" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.UriTest2.Relative_AsRelative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.UriTest2.RelativeEscapes" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest2.RelativeUriFromFile" executed="False">
                    <reason>
                      <message><![CDATA[Tests needs to be updated for 2.0]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.UriTest2.StarsInHost" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest2.UnknownScheme" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.UriTest2.UriScheme" executed="True" success="True" time="0.000" asserts="11" />
                </results>
              </test-suite>
              <test-suite name="UriTest3" success="True" time="0.021" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriTest3.Absolute_UriKind_Absolute" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest3.Absolute_UriKind_Relative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest3.AbsoluteUri_RelativeUri" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest3.Compare" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTest3.Constructor4_UriKind_Invalid" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTest3.Constructor4_UriString_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest3.DomainLabelLength" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest3.DontCheckHostWithCustomParsers" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest3.IsBaseOf" executed="True" success="True" time="0.002" asserts="25" />
                  <test-case name="MonoTests.System.UriTest3.IsBaseOf_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest3.IsWellFormedUriString" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest3.IsWellFormedUriString_UriKind_Invalid" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTest3.MakeRelativeUri" executed="True" success="True" time="0.002" asserts="152" />
                  <test-case name="MonoTests.System.UriTest3.MakeRelativeUri_Uri_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTest3.OriginalStringRelative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTest3.ParseShortNameAsRelativeOrAbsolute" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest3.PathAndQuery_RelativeUri" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest3.Query_RelativeUri" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest3.Relative_UriKind_Absolute" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTest3.Relative_UriKind_Relative" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.UriTest3.Scheme_RelativeUri" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTest3.TryCreate1" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.UriTest3.TryCreate1_UriKind_Invalid" executed="True" success="True" time="0.000" asserts="10" />
                  <test-case name="MonoTests.System.UriTest3.TryCreate2" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.UriTest3.TryCreate3" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.UriTest3.TryCreate3_RelativeUri_Null" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTest3.UnescapeDataString" executed="True" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="UriTestAux" success="True" time="0.073" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriTestAux.Bad_IPv6" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.CachingSegments" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.CaseSensitivity" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTestAux.CheckHostName1" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTestAux.CheckHostName2" executed="True" success="True" time="0.000" asserts="46" />
                  <test-case name="MonoTests.System.UriTestAux.CheckSchemeName" executed="True" success="True" time="0.000" asserts="11" />
                  <test-case name="MonoTests.System.UriTestAux.CheckSchemeName_AnyOtherChar" executed="True" success="True" time="0.000" asserts="256" />
                  <test-case name="MonoTests.System.UriTestAux.CheckSchemeName_FirstChar" executed="True" success="True" time="0.000" asserts="256" />
                  <test-case name="MonoTests.System.UriTestAux.ConsecutiveSlashes" executed="True" success="True" time="0.003" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.Constructor_DualHostPort" executed="True" success="True" time="0.000" asserts="21" />
                  <test-case name="MonoTests.System.UriTestAux.Constructor_NullStringBool" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.Constructor_UriNullBool" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.Constructors" executed="True" success="True" time="0.001" asserts="72" />
                  <test-case name="MonoTests.System.UriTestAux.ConstructorsRejectRelativePath" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.EmptyScheme" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.Equals1" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTestAux.Equals2" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.Equals3" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.Equals4" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.Fragment_Escape" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.Fragment_RelativeUri" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTestAux.FromHex" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTestAux.FtpRootPath" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_AbsoluteUri" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_Fragment" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_HttpRequestUrl" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_KeepDelimiter" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_Path" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_PathAndQuery" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_Query" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_Relative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.GetComponents_StrongAuthority" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTestAux.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.GetLeftPart" executed="True" success="True" time="0.000" asserts="21" />
                  <test-case name="MonoTests.System.UriTestAux.GetLeftPart_Partial1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.GetLeftPart_Partial2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.GetLeftPart_Partial3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.GetSerializationInfoStringException" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.GetSerializationInfoStringOnRelativeUri" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.HexEscape" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTestAux.HexUnescape" executed="True" success="True" time="0.000" asserts="14" />
                  <test-case name="MonoTests.System.UriTestAux.HexUnescapeMultiByte" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriTestAux.HttpHostname1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.HttpHostname2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.HttpHostname3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.HttpHostname4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.HttpHostname5" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.HttpHostname6" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.HttpHostname7" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.IncompleteSchemeDelimiter" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.InvalidFile1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.InvalidFile2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.InvalidFile3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.InvalidPort1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.InvalidPort2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.InvalidPort3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.InvalidScheme" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.IsHexDigit" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTestAux.IsHexEncoding" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.IsLoopback" executed="True" success="True" time="0.000" asserts="13" />
                  <test-case name="MonoTests.System.UriTestAux.IsLoopback_File" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.IsLoopback_Relative_Http" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.IsLoopback_Relative_Unknown" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.LeadingSlashes" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.UriTestAux.LeadingSlashes_BadResultsOn1x" executed="True" success="True" time="0.000" asserts="30" />
                  <test-case name="MonoTests.System.UriTestAux.LeadingSlashes_FailOn1x" executed="True" success="True" time="0.000" asserts="14" />
                  <test-case name="MonoTests.System.UriTestAux.LeadingSlashes_ShouldFailOn1x" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_Escape" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_FileHost" executed="True" success="True" time="0.000" asserts="14" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_FileNameWithAtSign1" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_FileNameWithAtSign2" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_FileNameWithAtSign3" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_FileNameWithAtSign4" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_FileNameWithAtSign5" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPath_FileNameWithAtSign6" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.LocalPathWithBaseUrl" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.MakeRelative" executed="True" success="True" time="0.000" asserts="14" />
                  <test-case name="MonoTests.System.UriTestAux.MoreHexEscape" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.NewsDefaultPort" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.NoHostname" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.NoHostname2" executed="True" success="True" time="0.000" asserts="19" />
                  <test-case name="MonoTests.System.UriTestAux.ParseOverride" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.PortMax" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.QueryEscape" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.RelativeCtor" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriTestAux.RelativeCtor_11_Crasher" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.RelativeEqualsTest" executed="True" success="True" time="0.000" asserts="10" />
                  <test-case name="MonoTests.System.UriTestAux.RelativeFragmentUri" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.RelativeFragmentUri2" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTestAux.RelativeGetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.RelativeUriWithColons" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.SchemeWithDigits" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.Segments1" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.Segments2" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.Segments3" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTestAux.Segments4" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTestAux.Segments5" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTestAux.TestEquals2" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTestAux.TestEscapeDataString" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.TestEscapeUriString" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.TestPartialToString" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTestAux.TestUTF8Strings" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTestAux.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.Unc" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTestAux.UncFail" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTestAux.Unescape" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.UriTestAux.UnixAbsoluteFilePath_WithSpecialChars1" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTestAux.UnixAbsoluteFilePath_WithSpecialChars2" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.UriTestAux.UnixLocalPath" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.UnixLocalPath_WTF" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UriTestAux.UnixPath" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.UriStartingWithColon" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.UserInfo_EscapedAt" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.UserInfo_EscapedChars" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.UriTestAux.UserInfo_EscapedLetter" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.UriTestAux.WindowsLocalPath" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="UriTypeConverterTest" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertFrom" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertFrom_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertFrom_Null_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertFrom_Null_Type" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertFrom_TypeDescriptorContext_Type" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertTo" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertTo_Null_Type" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.CanConvertTo_TypeDescriptorContext_Type" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertFrom" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertFrom_Bad" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertFrom_TypeDescriptorContext_Bad" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertFrom_TypeDescriptorContext_Type" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertFromString" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo_Bad" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo_String_to_InstanceDescriptor" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo_String_to_Uri" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo_TypeDescriptorContext" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo_TypeDescriptorContext_Bad" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo_TypeDescriptorContext_String_to_InstanceDescriptor" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.ConvertTo_TypeDescriptorContext_String_to_Uri" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UriTypeConverterTest.IsValid" executed="True" success="True" time="0.000" asserts="11" />
                </results>
              </test-suite>
              <test-suite name="Web" success="True" time="0.028" asserts="0">
                <results>
                  <test-suite name="AspNetHostingPermissionAttributeTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionAttributeTest.Action" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionAttributeTest.Level" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionAttributeTest.Level_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="AspNetHostingPermissionTest" success="True" time="0.020" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.AspNetHostingPermissionLevels_Bad" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Copy" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Intersect_None" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Intersect_Null" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Intersect_Self" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Intersect_Unrestricted" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.IsSubset_None" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.IsSubset_Null" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.IsSubset_Self" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.IsSubset_Unrestricted" executed="True" success="True" time="0.000" asserts="12" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Level_AspNetHostingPermissionLevels_Bad" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.PermissionState_None" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.PermissionState_Unrestricted" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Union_None" executed="True" success="True" time="0.001" asserts="24" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Union_Null" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Union_Self" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Web.AspNetHostingPermissionTest.Union_Unrestricted" executed="True" success="True" time="0.000" asserts="12" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>
